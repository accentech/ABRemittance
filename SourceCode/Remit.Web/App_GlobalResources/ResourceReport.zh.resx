<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DateType" xml:space="preserve">
    <value>日期类型</value>
  </data>
  <data name="DealerInfoReport" xml:space="preserve">
    <value>区智者经销商报告</value>
  </data>
  <data name="LblCurrentItemStockReport" xml:space="preserve">
    <value>当前项目股票报告</value>
  </data>
  <data name="LblDealer" xml:space="preserve">
    <value>零售商</value>
  </data>
  <data name="LblDealerWiseSizeWiseSalesReport" xml:space="preserve">
    <value>经销商明智的大小明智的销售报告</value>
  </data>
  <data name="LblItemReceiveReport" xml:space="preserve">
    <value>买入和接收股票报告</value>
  </data>
  <data name="LblItemStockRegister" xml:space="preserve">
    <value>项目股票登记</value>
  </data>
  <data name="LblItemStockReport" xml:space="preserve">
    <value>物料库存报告</value>
  </data>
  <data name="LblItemStockStatusReport" xml:space="preserve">
    <value>项目库存状态和重新订购级别报告</value>
  </data>
  <data name="LblItemUseReport" xml:space="preserve">
    <value>每日原材料使用和库存报告</value>
  </data>
  <data name="LblMonthlyDelivery2Report" xml:space="preserve">
    <value>每月交货详情报告</value>
  </data>
  <data name="LblMonthlyDeliveryReport" xml:space="preserve">
    <value>每月交付报告</value>
  </data>
  <data name="LblProductStockReport" xml:space="preserve">
    <value>工厂库存报告</value>
  </data>
  <data name="LblProductType" xml:space="preserve">
    <value>产品类别</value>
  </data>
  <data name="LblProductWiseSalesReport" xml:space="preserve">
    <value>产品明智的销售报告</value>
  </data>
  <data name="LblSalesStatement" xml:space="preserve">
    <value>销售报表</value>
  </data>
  <data name="LblSalesStatementByDealer" xml:space="preserve">
    <value>经销商的销售声明</value>
  </data>
  <data name="LblSalesStatementInDaterange" xml:space="preserve">
    <value>在日期范围内的销售报表</value>
  </data>
  <data name="LblSalesUnit" xml:space="preserve">
    <value>销售单位</value>
  </data>
  <data name="LblSelectDealer" xml:space="preserve">
    <value>选择经销商</value>
  </data>
  <data name="LblSelectType" xml:space="preserve">
    <value>选择类型</value>
  </data>
  <data name="LblSelectUnit" xml:space="preserve">
    <value>选择单位</value>
  </data>
  <data name="LblVIewReport" xml:space="preserve">
    <value>查看报告</value>
  </data>
  <data name="LblYGUWDSR" xml:space="preserve">
    <value>年度销售声明</value>
  </data>
  <data name="MsgSelectDealer" xml:space="preserve">
    <value>请选择经销商查看报告</value>
  </data>
  <data name="Reason" xml:space="preserve">
    <value>原因</value>
  </data>
</root>