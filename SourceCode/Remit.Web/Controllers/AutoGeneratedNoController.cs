using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using Remit.CachingService;
using Remit.Model.Models;
using Remit.Service;
using Helpers;
using OfficeOpenXml.FormulaParsing.Excel.Functions.Math;
using System.Web.Configuration;

namespace Remit.Web.Controllers
{
    public class AutoGeneratedNoController : Controller
    {
        public readonly IAutoGeneratedNoService AutoGeneratedNoService;
        public readonly ISubModuleItemService subModuleItemService;
        public readonly IRoleSubModuleItemService roleSubModuleItemService;
        private static readonly ICacheProvider cacheProvider = new DefaultCacheProvider();

        public AutoGeneratedNoController(IAutoGeneratedNoService AutoGeneratedNoService, ISubModuleItemService subModuleItemService, IRoleSubModuleItemService roleSubModuleItemService)
        {
            this.AutoGeneratedNoService = AutoGeneratedNoService;
            this.subModuleItemService = subModuleItemService;
            this.roleSubModuleItemService = roleSubModuleItemService;
        }

        string dateTimeFormat = WebConfigurationManager.AppSettings["DateTimeFormat"];
        string cacheKey = "permission:AutoGeneratedNo" + Helpers.UserSession.GetUserFromSession().RoleId;
        RoleSubModuleItem permission = null;

        // GET: /AutoGeneratedNo/
        public ActionResult Index()
        {
            const string url = "/AutoGeneratedNo/Index";
            permission = (RoleSubModuleItem)cacheProvider.Get(cacheKey) ??
                         roleSubModuleItemService.GetRoleSubModuleItemBySubModuleIdandRole(url, Helpers.UserSession.GetUserFromSession().RoleId);

            if (permission != null)
            {
                if (permission.ReadOperation == true)
                {
                    cacheProvider.Set(cacheKey, permission, 240);
                    return View("AutoGeneratedNo");
                }
                else
                {
                    return View("~/Views/Shared/NoPermission.cshtml");
                }
            }

            return View("~/Views/Shared/NoPermission.cshtml");
        }


        public ActionResult AutoGeneratedNo()
        {
            return View();
        }



        public string GenNo(string id)
        {
            var genNo = this.AutoGeneratedNoService.GenerateNo(id);
            genNo = genNo.Replace('"', ' ').Trim();
            //return Json(genDemand,JsonRequestBehavior.AllowGet);
            return genNo;
        }

       
        [HttpPost]
        public JsonResult CreateAutoGeneratedNo(AutoGeneratedNo AutoGeneratedNo)
        {
            
            var isSuccess = false;
            var message = string.Empty;
            var isNew = AutoGeneratedNoService.GetAutoGeneratedNo(AutoGeneratedNo.Id);
            const string url = "/AutoGeneratedNo/Index";
            permission = (RoleSubModuleItem)cacheProvider.Get(cacheKey) ??
                         roleSubModuleItemService.GetRoleSubModuleItemBySubModuleIdandRole(url, Helpers.UserSession.GetUserFromSession().RoleId);

            if (isNew == null)
            {
                if (permission.CreateOperation == true)
                {
                    if (!CheckIsExist(AutoGeneratedNo))
                    {
                        if (this.AutoGeneratedNoService.CreateAutoGeneratedNo(AutoGeneratedNo))
                        {
                            isSuccess = true;
                            message = "AutoGeneratedNo  saved successfully!";
                        }
                        else
                        {
                            message = "AutoGeneratedNo  could not saved!";
                        }
                    }
                    else
                    {
                        isSuccess = false;
                        message = "Can't save. Same Product Type found!";
                    }
                }
                else
                {
                    message = Resources.ResourceCommon.MsgNoPermissionToCreate;
                }
            }
            else
            {
                if (permission.UpdateOperation == true)
                {
                    isNew.Type = AutoGeneratedNo.Type;
                    isNew.Prefix = AutoGeneratedNo.Prefix;
                    isNew.PeriodFormat = AutoGeneratedNo.PeriodFormat;
                    isNew.RefreshFrequency = AutoGeneratedNo.RefreshFrequency;
                    isNew.Format = AutoGeneratedNo.Format;
                    isNew.StartIndex = AutoGeneratedNo.StartIndex;
                    isNew.LastIndex = AutoGeneratedNo.LastIndex;
                    isNew.LastIndexDate = AutoGeneratedNo.LastIndexDate;
                    isNew.Separator1 = AutoGeneratedNo.Separator1;
                    isNew.Separator2 = AutoGeneratedNo.Separator2;

                 
                        if (this.AutoGeneratedNoService.UpdateAutoGeneratedNo(isNew))
                        {
                            isSuccess = true;
                            message = "AutoGeneratedNo  updated successfully!";
                        }
                        else
                        {
                            message = "AutoGeneratedNo  could not updated!";
                        }
                    
                    
                }
                else
                {
                    message = Resources.ResourceCommon.MsgNoPermissionToUpdate;
                }

            }

            return Json(new
            {
                isSuccess = isSuccess,
                message = message,
            }, JsonRequestBehavior.AllowGet);
        }
        private bool CheckIsExist(Model.Models.AutoGeneratedNo AutoGeneratedNo)
        {
            return this.AutoGeneratedNoService.CheckIsExist(AutoGeneratedNo);
        }

        [HttpPost]
        public JsonResult DeleteAutoGeneratedNo(AutoGeneratedNo AutoGeneratedNo)
        {
            var isSuccess = true;
            var message = string.Empty;
            const string url = "/AutoGeneratedNo/Index";
            permission = (RoleSubModuleItem)cacheProvider.Get(cacheKey) ?? roleSubModuleItemService.GetRoleSubModuleItemBySubModuleIdandRole(url,
                                Helpers.UserSession.GetUserFromSession().RoleId);

            if (permission.DeleteOperation == true)
            {
                isSuccess = this.AutoGeneratedNoService.DeleteAutoGeneratedNo(AutoGeneratedNo.Id);
                if (isSuccess)
                {
                    message =Resources.ResourceAutoGeneratedNo.msg_del;

                }
                else
                {
                    message = Resources.ResourceAutoGeneratedNo.msg_not_del;
                }
            }
            else
            {
                message = Resources.ResourceCommon.MsgNoPermissionToDelete;
            }


            return Json(new
            {
                isSuccess = isSuccess,
                message = message
            }, JsonRequestBehavior.AllowGet);
        }

        public JsonResult GetAutoGeneratedNoList()
        {
            var AutoGeneratedNoListObj = this.AutoGeneratedNoService.GetAllAutoGeneratedNo();
            List<AutoGeneratedNoViewModel> AutoGeneratedNoVMList = new List<AutoGeneratedNoViewModel>();

            foreach (var AutoGeneratedNo in AutoGeneratedNoListObj)
            {
                AutoGeneratedNoViewModel AutoGeneratedNoTemp = new AutoGeneratedNoViewModel();
                AutoGeneratedNoTemp.Id = AutoGeneratedNo.Id;
                AutoGeneratedNoTemp.Type = AutoGeneratedNo.Type;
                AutoGeneratedNoTemp.Prefix = AutoGeneratedNo.Prefix;
                AutoGeneratedNoTemp.PeriodFormat = AutoGeneratedNo.PeriodFormat;
                AutoGeneratedNoTemp.RefreshFrequency = AutoGeneratedNo.RefreshFrequency;
                AutoGeneratedNoTemp.Format = AutoGeneratedNo.Format;
                AutoGeneratedNoTemp.StartIndex = AutoGeneratedNo.StartIndex;
                AutoGeneratedNoTemp.LastIndex = AutoGeneratedNo.LastIndex;
                if (AutoGeneratedNo.LastIndexDate != null)
                {
                    var lastIndexDate = AutoGeneratedNo.LastIndexDate;
                    AutoGeneratedNoTemp.LastIndexDate = lastIndexDate.Value.ToString(dateTimeFormat);
                }
                AutoGeneratedNoTemp.Separator1 = AutoGeneratedNo.Separator1;
                AutoGeneratedNoTemp.Separator2 = AutoGeneratedNo.Separator2;

                AutoGeneratedNoVMList.Add(AutoGeneratedNoTemp);
            }
            return Json(AutoGeneratedNoVMList, JsonRequestBehavior.AllowGet);
        }

        public JsonResult GetAutoGeneratedNo(int id)
        {
            var AutoGeneratedNo = this.AutoGeneratedNoService.GetAutoGeneratedNo(id);
            AutoGeneratedNoViewModel AutoGeneratedNoTemp = new AutoGeneratedNoViewModel();
            AutoGeneratedNoTemp.Id = AutoGeneratedNo.Id;
            AutoGeneratedNoTemp.Type = AutoGeneratedNo.Type;
            AutoGeneratedNoTemp.Prefix = AutoGeneratedNo.Prefix;
            AutoGeneratedNoTemp.PeriodFormat = AutoGeneratedNo.PeriodFormat;
            AutoGeneratedNoTemp.RefreshFrequency = AutoGeneratedNo.RefreshFrequency;
            AutoGeneratedNoTemp.Format = AutoGeneratedNo.Format;
            AutoGeneratedNoTemp.StartIndex = AutoGeneratedNo.StartIndex;
            AutoGeneratedNoTemp.LastIndex = AutoGeneratedNo.LastIndex;
            if (AutoGeneratedNo.LastIndexDate != null)
            {
                var lastIndexDate =AutoGeneratedNo.LastIndexDate;
                AutoGeneratedNoTemp.LastIndexDate = lastIndexDate.Value.ToString(dateTimeFormat);
            }
            AutoGeneratedNoTemp.Separator1 = AutoGeneratedNo.Separator1;
            AutoGeneratedNoTemp.Separator2 = AutoGeneratedNo.Separator2;

            return Json(AutoGeneratedNoTemp, JsonRequestBehavior.AllowGet);
        }


        public JsonResult GetAutoGeneratedNoByType(string type)
        {
            var AutoGeneratedNo = this.AutoGeneratedNoService.GetAllAutoGeneratedNo().FirstOrDefault(a => a.Type==type);
            AutoGeneratedNoViewModel AutoGeneratedNoTemp = new AutoGeneratedNoViewModel();
            AutoGeneratedNoTemp.Id = AutoGeneratedNo.Id;
            AutoGeneratedNoTemp.Type = AutoGeneratedNo.Type;
            AutoGeneratedNoTemp.Prefix = AutoGeneratedNo.Prefix;
            AutoGeneratedNoTemp.PeriodFormat = AutoGeneratedNo.PeriodFormat;
            AutoGeneratedNoTemp.RefreshFrequency = AutoGeneratedNo.RefreshFrequency;
            AutoGeneratedNoTemp.Format = AutoGeneratedNo.Format;
            AutoGeneratedNoTemp.StartIndex = AutoGeneratedNo.StartIndex;
            AutoGeneratedNoTemp.LastIndex = AutoGeneratedNo.LastIndex;
            AutoGeneratedNoTemp.LastIndexDate = AutoGeneratedNo.LastIndexDate.ToString();
            AutoGeneratedNoTemp.Separator1 = AutoGeneratedNo.Separator1;
            AutoGeneratedNoTemp.Separator2 = AutoGeneratedNo.Separator2;

            return Json(AutoGeneratedNoTemp, JsonRequestBehavior.AllowGet);
        }




    }

    public class AutoGeneratedNoViewModel
    {
        public int Id { get; set; }
        public string Type { get; set; }
        public string Prefix { get; set; }
        public string PeriodFormat { get; set; }
        public string RefreshFrequency { get; set; }
        public string Format { get; set; }
        public int? StartIndex { get; set; }
        public int? LastIndex { get; set; }
        public string LastIndexDate { get; set; }
        public string Separator1 { get; set; }
        public string Separator2 { get; set; }









    }
}