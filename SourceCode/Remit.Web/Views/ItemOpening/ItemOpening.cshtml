@{
    ViewBag.Title = @Resources.ResourceItemOpening.LblItemOpening;
    Layout = "~/Views/Shared/_Angular1_6_7NewMenuView.cshtml";
}

<div class="col-xs-12 col-sm-12" ng-controller="itemOpeningCtrl">
    @* ************ FORM - SECTION (Start)*************** *@
    <div class="panel panel-default">
        <div class="panel-heading text-lg text-bold text-uppercase">
            @Resources.ResourceItemOpening.LblItemOpening
        </div>

        <div class="panel-body  border-green pt pb">
            <div class="row">

                <div class="col-md-2 col-sm-4 col-xs-4 selector-container-div">

                    <div class="panel panel-default selector-container">
                        <div class="panel-body" style="padding: 0;">
                            <div class="form-group">
                                <label class="control-label">@Resources.ResourceCommon.LblYear</label>
                                <input type="text" class="form-control" ng-model="selectedYear" name="selectedYear" data-date-format="yyyy" bs-datepicker data-container="body"
                                       data-min-view="2" data-autoclose="true" ng-change="loadOpeningDateListByYear()" data-trigger="click">
                            </div>                            
                            <div class="form-group">
                                <label class="control-label">@Resources.ResourceItemOpening.LblOpeningDate</label>
                                <div class="" style="height: 600px;">
                                    <select multiple data-ng-model="OpeningDate" class="form-control listSelect" focus-on="focusMe"
                                            required data-ng-options="c for c in allOpeningDateFromDb" name="OpeningDate"
                                            style="height: 100%; overflow-y: auto; padding: 0;" ng-change="loadOpeningDetailsByDate(OpeningDate)">
                                        <option value="">@Resources.ResourceCommon.LblSelect</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-md-10 col-sm-8 col-xs-8">
                    <div class="row">
                        <div class="col-md-4 pull-left" style="padding: 0 0 20px 0">
                            <div class="panel panel-default selector-container">
                                <div class="panel-body" style="padding: 0;">
                                    <div class="form-group">
                                        <div class="col-xs-12 col-sm-4 col-md-4">
                                            <label class="control-label">@Resources.ResourceItem.LblItemCategory</label>
                                        </div>
                                        <div class="col-xs-12 col-sm-8 col-md-8">
                                            <select data-ng-model="CategoryId" class="form-control"
                                                    data-ng-options="c.Id as c.Name for c in allItemCategoryFromDb" name="CategoryId" ng-change="loadItemListByCategoryId(CategoryId)">
                                                <option value="">@Resources.ResourceCommon.LblSelect @Resources.ResourceItem.LblItemCategory</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-5 pull-right" style="padding: 0 0 20px 0">
                            <div class="panel panel-default selector-container">
                                <div class="panel-body" style="padding: 0;">
                                    <div class="form-group">
                                        <div class="col-xs-12 col-sm-4 col-md-4">
                                            <label class="control-label">@Resources.ResourceItemOpening.LblOpeningDate</label>
                                        </div>
                                        <div class="col-xs-12 col-sm-4 col-md-4">
                                            <input type="text" class="form-control" ng-model="TopOpeningDate" name="TopOpeningDate" data-date-format="dd-MMM-yyyy" bs-datepicker
                                                   data-min-view="0" data-container="body" data-autoclose="true" ng-change="updateOpeningDate()">
                                        </div>
                                        <div class="col-xs-12 col-sm-4 col-md-4">
                                            <input type="text" class="form-control" ng-model="TopOpeningDate" name="TopOpeningDate" data-date-format="HH:mm:ss" bs-timepicker
                                                   data-min-view="0" data-container="body" data-autoclose="true" ng-change="updateOpeningDate()">
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-horizontal">
                        <form name="form" novalidate>
                            <table class="table table-responsive slidable-table">
                                <thead>
                                    <tr>
                                        <th class="col-md-2">
                                            @Resources.ResourceItem.LblItemCategory
                                        </th>
                                        <th class="col-md-2">
                                            @Resources.ResourceItem.LblItem
                                        </th>
                                        <th class="col-md-2">
                                            @Resources.ResourceItemOpening.LblQuantity
                                        </th>
                                        <th class="col-md-2">
                                            @Resources.ResourceItemOpening.LblUnit
                                        </th>
                                        <th class="col-md-2">
                                            @Resources.ResourceItemOpening.LblBinCardNo
                                        </th>
                                        <th class="col-md-2">
                                            @Resources.ResourceItemOpening.LblOpeningDate
                                        </th>
                                        <th class="col-md-2">
                                            @Resources.ResourceFGItemOpening.LblOpeningTime
                                        </th>
                                        <th class="col-md-1" ng-if="OpeningDate">
                                            @Resources.ResourceItemOpening.LblStatus
                                        </th>
                                        <th class="col-md-1">
                                            @Resources.ResourceCommon.LblAction
                                        </th>
                                    </tr>
                                </thead>

                                <tbody>
                                    <tr ng-repeat="aItem in ItemOpeningDetails  | filter : {ItemCategoryId : ((CategoryId === null) ? undefined:CategoryId)}">
                                        <td>
                                            <select ng-disabled="OpeningDate" data-ng-model="aItem.ItemCategoryId" class="form-control"
                                                    data-ng-options="c.Id as c.Name for c in allItemCategoryFromDb | orderBy: 'Name'" name="ItemCategoryId" ng-change="getAllItemByCategoryId($index,aItem.ItemCategoryId)">
                                                <option value="">@Resources.ResourceCommon.LblSelect @Resources.ResourceItem.LblItemCategory</option>
                                            </select>
                                        </td>
                                        <td>
                                            <select ng-disabled="OpeningDate" data-ng-model="aItem.ItemId" class="form-control"
                                                    data-ng-options="c.Id as c.Name for c in aItem.allItemFromDb | orderBy: 'Name'" name="ItemId" ng-change="changeUnit($index,aItem.ItemId)">
                                                <option value="">@Resources.ResourceCommon.LblSelect @Resources.ResourceItemOpening.LblItem</option>
                                            </select>
                                        </td>
                                        <td>
                                            <input data-ng-class="form-control" type="number" class="form-control" ng-model="aItem.Quantity" name="Quantity" min="0">
                                        </td>
                                        <td>
                                            <input data-ng-class="form-control" type="text" class="form-control" ng-model="aItem.UnitName" readonly name="UnitName">
                                        </td>
                                        <td>
                                            <select ng-disabled="OpeningDate" ng-model="aItem.BinCardId" class="form-control"
                                                    data-ng-options="c.Id as c.WarhouseName+'-'+c.CardNo for c in allBinCardFromDb | orderBy: ['WarhouseName', 'CardNo']" name="BinCardId">
                                                <option value="">
                                                    @Resources.ResourceCommon.LblSelect @Resources.ResourceItemOpening.LblBinCard
                                                </option>
                                            </select>
                                        </td>
                                        <td>
                                            <input type="text" class="form-control" ng-model="aItem.OpeningDate" name="OpeningDate" required data-date-format="dd-MMM-yyyy" bs-datepicker
                                                   data-min-view="0" data-container="body" data-autoclose="true" />
                                        </td>
                                        <td>
                                            <input type="text" class="form-control" ng-model="aItem.OpeningDate" name="OpeningDate" required data-date-format="HH:mm:ss" bs-timepicker
                                                   data-min-view="0" data-container="body" data-autoclose="true">
                                        </td>
                                        <td ng-if ="OpeningDate">
                                            <label ng-if="aItem.Status != @((int)Remit.Service.Enums.CommonEnum.Approved)" class="label label-warning">Pending</label>
                                            <label ng-if="aItem.Status == @((int)Remit.Service.Enums.CommonEnum.Approved)" class="label label-success">Approved</label>
                                        </td>
                                        <td>
                                            <input type="button" class=" btn btn-danger"
                                                   ng-click="ItemOpeningDetails.splice($index, 1)"
                                                   title="@Resources.ResourceCommon.MsgConfirmRemoveFromTheDetails"
                                                   value="@Resources.ResourceCommon.LblRemove">
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                            <div ng-if="!OpeningDate" class="col-md-2 padding-left-zero">
                                <input type="button" class=" btn btn-block btn-sm btn-info buttonadditem" ng-click="addNewDetail($event)" value="@Resources.ResourceCommon.LblAddDetailItem" style="width: 100%;" />
                            </div>
                        </form>
                        <br /><br />
                        <div class="row">
                            <div class="form-group">
                                <div class="col-xs-12 col-sm-12 col-md-12">
                                    <input type="button" ng-click="addItemOpening()" class="btn btn-primary" value="@Resources.ResourceCommon.LblSave" />
                                    <input type="button" ng-if="OpeningDate" class="btn btn-warning" value=@Resources.ResourceCommon.LblApprove ng-bootbox-confirm='@Resources.ResourceCommon.MsgConfirm_Approve'
                                           ng-bootbox-confirm-action="approveItemOpening()" ng-bootbox-confirm-action-cancel="confirmCallbackCancel(attr1, attr2)" />
                                    <input type="button" ng-click="reset()" class="btn btn-default" value="@Resources.ResourceCommon.LblReset" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @* ************ FORM - SECTION (End)*************** *@


    @* ************ POP-UP MODEL (Start)*************** *@
    <div class="row">
        <div class="col-xs-12 col-sm-4 col-md-4">
            <modal title='@Resources.ResourceCommon.MsgHeaderSuccess' visible="showModalforSearch">
                <alert ng-repeat="alert in alerts" type="alert.type" close="closeAlert($index)">{{alert.msg}}</alert>
                <form name="form.update" role="form">
                    <div class="row">
                        <div class="col-xs-12 col-sm-12 col-md-12">
                            <span>{{messageModalObj.message}}</span>
                        </div>
                    </div>
                </form>
            </modal>
        </div>
    </div>
    @* ************ POP-UP MODEL (End)*************** *@
</div>


@* ************ SCRIPT - SECTION (Start) *************** *@
<script type="text/javascript">
    app.filter('startFrom', function () {
        return function (input, start) {
            if (input) {
                start = +start; //parse to int
                return input.slice(start);
            }
            return [];
        }
    });
    app.factory('focus', function ($rootScope, $timeout) {
        return function (name) {
            $timeout(function () {
                $rootScope.$broadcast('focusOn', name);
            });
        };
    });
    app.factory('itemOpeningService', ['$http', function ($http) {
        return {
            saveItemOpening: function (itemOpeningList) {
                return $http({
                    url: '/ItemOpening/CreateItemOpeningList',
                    method: 'POST',
                    data: itemOpeningList
                });
            },
            approveItemOpening: function (itemOpeningList) {
                return $http({
                    url: '/ItemOpening/ApproveItemOpeningList',
                    method: 'POST',
                    data: itemOpeningList
                });
            },
            getItemOpening: function (openingdate) {
                return $http.get('/ItemOpening/GetItemOpening/?openingdate=' + openingdate);
            },
            getRemainingItemList: function () {
                return $http.get('/ItemOpening/GetRemainingItemList');
            },
            getOpeningDateListByYear: function (year) {
                return $http.get('/ItemOpening/GetOpeningDateListByYear',
                    {
                        params: { year: year }

                    });
            },
            getAllItemByCategoryId: function (id) {
                return $http.get('/Item/GetItemListByCategoryId?id=' + id);
            },
            getAllItemCategory: function () {
                return $http.get('/ItemCategory/GetItemCategoryList2');
            },
            getAllBinCard: function () {
                return $http.get('/BinCard/GetBinCardList');
            }
        };
    }]);

    app.controller('itemOpeningCtrl',function ($scope,$timeout,$http,focus,$location,$anchorScroll,itemOpeningService,$log,$ngBootbox) {
        $scope.selectedYear = new Date;
        $scope.TopOpeningDate = new Date();

        $scope.messageModalObj = {};
        $scope.messageModalObj.message = '';

        $scope.showModalforSearch = false;

        $scope.ItemOpeningDetails = [];
        $scope.ItemOpeningDetails.push({ Id: '', ItemCategoryId: $scope.CategoryId, ItemId: null, OpeningDate: $scope.TopOpeningDate, Quantity: 0, UnitId: null, UnitName: '', BinCardId: null, Status: '', ApprovedBy: null, ApprovedDate: '' });
        
        $scope.changeUnit = function (index, itemId) {
            if (itemId != null) {
                var allitem = $scope.ItemOpeningDetails[index].allItemFromDb;
                for (i in allitem) {
                    if (allitem[i].Id == itemId) {
                        $scope.ItemOpeningDetails[index].UnitId = allitem[i].UsageUnitId;
                        $scope.ItemOpeningDetails[index].UnitName = allitem[i].UsageUnit;
                    }
                }
            }
        }

        $scope.addNewDetail = function ($event) {
            $scope.ItemOpeningDetails.push({ Id: '', ItemCategoryId: $scope.CategoryId, ItemId: null, OpeningDate: $scope.TopOpeningDate, Quantity: 0, UnitId: null, UnitName: '', BinCardId: null, Status: '', ApprovedBy: null, ApprovedDate: '' });
                var i = $scope.ItemOpeningDetails.length - 1;
                $scope.getAllItemByCategoryId(i, $scope.ItemOpeningDetails[i].ItemCategoryId)
        }

        // Add a new itemOpening
        $scope.addItemOpening = function () {
            $scope.$broadcast('show-errors-check-validity');
            if ($scope.form.$valid) {
                var itemOpening = {};

                itemOpening["TopOpeningDate"] = $scope.TopOpeningDate;
                itemOpening["ItemOpeningDetails"] = $scope.ItemOpeningDetails.filter(function (person) {
                    return (person.ItemCategoryId == $scope.CategoryId || $scope.CategoryId === null || $scope.CategoryId === undefined);
                });

                if (itemOpening["ItemOpeningDetails"].length > 0) {
                    for (var i = 0; i < itemOpening["ItemOpeningDetails"].length; i++) {
                        if (itemOpening["ItemOpeningDetails"][i].ItemId !== null && itemOpening["ItemOpeningDetails"][i].ItemId !== undefined) {
                            if (itemOpening["ItemOpeningDetails"][i].BinCardId !== null && itemOpening["ItemOpeningDetails"][i].BinCardId !== undefined) {
                                if (itemOpening["ItemOpeningDetails"][i].Quantity !== 0 && itemOpening["ItemOpeningDetails"][i].Quantity !== null && itemOpening["ItemOpeningDetails"][i].Quantity !== "") {

                                }
                                else {
                                    $ngBootbox.alert('@Resources.ResourceItemOpening.LblQuantityRequiredItemOpeningdDetails');
                                    return;
                                }
                            }
                            else {
                                $ngBootbox.alert('@Resources.ResourceItemOpening.LblBinCardRequiredItemOpeningdDetails');
                                return;
                            }
                        }
                        else {
                            $ngBootbox.alert('@Resources.ResourceItemOpening.LblItemRequiredItemOpeningdDetails');
                            return;
                        }
                    }
                    itemOpeningService.saveItemOpening(itemOpening["ItemOpeningDetails"])
                        .then(function onSuccess(response) {
                            $scope.messageModalObj.message = response.data.message;
                            $scope.showModalforSearch = true;
                            $timeout(function () { $scope.showModalforSearch = false; }, 3000);
                            $scope.reset();
                            $scope.loadOpeningDateListByYear();
                        })
                        .catch(function onError(response) {
                            $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInSaving');
                        });
                }
                else {
                    $ngBootbox.alert('@Resources.ResourceCommon.MsgNeedDetails');
                    return;
                }
            }
            else {
                $ngBootbox.alert('@Resources.ResourceCommon.MsgFillAll');
            }
        };

        // Approve itemOpening
        $scope.approveItemOpening = function () {
            $scope.$broadcast('show-errors-check-validity');
            if ($scope.form.$valid) {
                var itemOpening = {};

                itemOpening["TopOpeningDate"] = $scope.TopOpeningDate;
                itemOpening["ItemOpeningDetails"] = $scope.ItemOpeningDetails.filter(function (person) {
                    return (person.ItemCategoryId == $scope.CategoryId || $scope.CategoryId === null || $scope.CategoryId === undefined);
                });

                if (itemOpening["ItemOpeningDetails"].length > 0) {
                    for (var i = 0; i < itemOpening["ItemOpeningDetails"].length; i++) {
                        if (itemOpening["ItemOpeningDetails"][i].ItemId !== null && itemOpening["ItemOpeningDetails"][i].ItemId !== undefined) {
                            if (itemOpening["ItemOpeningDetails"][i].BinCardId !== null && itemOpening["ItemOpeningDetails"][i].BinCardId !== undefined) {
                                if (itemOpening["ItemOpeningDetails"][i].Quantity !== 0 && itemOpening["ItemOpeningDetails"][i].Quantity !== null && itemOpening["ItemOpeningDetails"][i].Quantity !== "") {

                                }
                                else {
                                    $ngBootbox.alert('@Resources.ResourceItemOpening.LblQuantityRequiredItemOpeningdDetails');
                                    return;
                                }
                            }
                            else {
                                $ngBootbox.alert('@Resources.ResourceItemOpening.LblBinCardRequiredItemOpeningdDetails');
                                return;
                            }
                        }
                        else {
                            $ngBootbox.alert('@Resources.ResourceItemOpening.LblItemRequiredItemOpeningdDetails');
                            return;
                        }
                    }
                    itemOpeningService.approveItemOpening(itemOpening["ItemOpeningDetails"])
                        .then(function onSuccess(response) {
                            $scope.messageModalObj.message = response.data.message;
                            $scope.showModalforSearch = true;
                            $timeout(function () { $scope.showModalforSearch = false; }, 3000);
                            $scope.reset();
                            $scope.loadOpeningDateListByYear();
                        })
                        .catch(function onError(response) {
                            $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInSaving');
                        });
                }
                else {
                    $ngBootbox.alert('@Resources.ResourceCommon.MsgNeedDetails');
                    return;
                }
            }
            else {
                $ngBootbox.alert('@Resources.ResourceCommon.MsgFillAll');
            }
        };

        $scope.updateOpeningDate = function () {
            for (var i in $scope.ItemOpeningDetails) {
                $scope.ItemOpeningDetails[i].OpeningDate = $scope.TopOpeningDate;
            }
        }

        $scope.reset = function () {
            $scope.$broadcast('show-errors-reset');
            $scope.TopOpeningDate = new Date();

            $scope.ItemOpeningDetails = [];
            $scope.ItemOpeningDetails.push({ Id: '', ItemCategoryId: $scope.CategoryId, ItemId: null, OpeningDate: $scope.TopOpeningDate, Quantity: 0, UnitId: null, UnitName: '', BinCardId: null, Status: '', ApprovedBy: null, ApprovedDate: '' });

            $scope.CategoryId = null;
            $scope.loadRemainingItemList();
            $scope.OpeningDate = null;
        }

        $scope.loadRemainingItemList = function () {
            $scope.ItemOpeningDetails = [];
            itemOpeningService.getRemainingItemList()
                .then(function (response) {
                    if (response.data.isSuccess) {
                        $scope.ItemOpeningDetails = response.data.List;
                        for (var i in $scope.ItemOpeningDetails) {
                            $scope.ItemOpeningDetails[i].OpeningDate = $scope.TopOpeningDate;
                            $scope.getAllItemByCategoryId(i, $scope.ItemOpeningDetails[i].ItemCategoryId)
                        }
                    }
                })
                .catch(function onError(response) {
                    $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInLoading');
                });
        }
        $scope.loadRemainingItemList();

        loadAllItemCategory();
        function loadAllItemCategory() {
            $scope.allItemCategoryFromDb = [];
            itemOpeningService.getAllItemCategory()
                .then(function onSuccess(response) {
                    $scope.allItemCategoryFromDb = response.data;
                })
                .catch(function onError(response) {
                    $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInLoading');
                });
        }

        $scope.getAllItemByCategoryId = function (index, categoryId) {
            $scope.ItemOpeningDetails[index].allItemFromDb = [];
            if (categoryId != null)
                itemOpeningService.getAllItemByCategoryId(categoryId)
                .then(function onSuccess(response) {
                    $scope.ItemOpeningDetails[index].allItemFromDb = response.data;
                })
                .catch(function onError(response) {
                    $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInLoading');
                });
        }

        loadAllBinCard();
        function loadAllBinCard() {
            $scope.allBinCardFromDb = [];
            itemOpeningService.getAllBinCard()
                .then(function onSuccess(response) {
                    $scope.allBinCardFromDb = response.data;
                })
                .catch(function onError(response) {
                    $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInLoading');
                });
        }

        $scope.loadOpeningDetailsByDate = function (openingDate) {
            if (openingDate != null) {
                $scope.ItemOpeningDetails = [];
                itemOpeningService.getItemOpening(openingDate)
                .then(function onSuccess(response) {
                    $scope.ItemOpeningDetails = response.data.List;
                    for (var i in $scope.ItemOpeningDetails) {
                        $scope.ItemOpeningDetails[i].OpeningDate = new Date($scope.ItemOpeningDetails[i].OpeningDate);
                        $scope.getAllItemByCategoryId(i, $scope.ItemOpeningDetails[i].ItemCategoryId)
                    }
                })
                .catch(function onError(response) {
                    $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInLoading');
                });
            }
        }

        $scope.loadOpeningDateListByYear = function () {
            year = $scope.selectedYear.getFullYear();
            $scope.allOpeningDateFromDb = [];
            itemOpeningService.getOpeningDateListByYear(year)
                .then(function onSuccess(response) {
                    $scope.allOpeningDateFromDb = response.data;
                })
                .catch(function onError(response) {
                    $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInLoading');
                });
        }
        $scope.loadOpeningDateListByYear();
    });
</script>
