@{
    ViewBag.Title = "BankAccount";
    Layout = "~/Views/Shared/_Angular1_6_7NewMenuView.cshtml";
}

<div class="col-xs-12 col-sm-12" ng-controller="bankAccountCtrl">
    <div class="panel panel-default">
        <div class="panel-heading text-lg text-bold text-uppercase">@Resources.ResourceBankAccount.LblBankAccount</div>
        <div class="panel-body  border-green pt pb">
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-12">
                    <div class="form-horizontal">
                        <form name="form" novalidate>

                            <div class="form-group" show-errors id="searchdivid">
                                <div class=" padding-right-zero">
                                    <label class="col-xs-12 col-sm-3 col-md-3 control-label default-color">
                                        <b class="starStyle">*</b> @Resources.ResourceCountry.LblCountry
                                    </label>
                                </div>
                                <div class="col-xs-12 col-sm-5 col-md-5">
                                    <select data-ng-model="CountryId" class="form-control"
                                            data-ng-options="c.Id as c.Name for c in allCountryFromDb | orderBy: 'Name'" name="CountryId" ng-required="true">
                                        <option value="">@Resources.ResourceBankAccount.SelectCountry</option>
                                    </select>
                                    <b class="help-block" ng-if="form.CountryId.$error.required">
                                        @string.Format(Resources.ResourceCommon.VMsgRequired_Name, Resources.ResourceCountry.LblCountry)
                                    </b>
                                </div>
                            </div>


                            <div class="form-group" show-errors id="searchdivid">
                                <div class=" padding-right-zero">
                                    <label class="col-xs-12 col-sm-3 col-md-3 control-label default-color">
                                        <b class="starStyle">*</b> @Resources.ResourceBank.LblBank
                                    </label>
                                </div>
                                <div class="col-xs-12 col-sm-5 col-md-5">
                                    <select data-ng-model="BankId" class="form-control"
                                            data-ng-options="b.Id as b.Name for b in allBankFromDb | orderBy: 'Name'" name="BankId" ng-required="true" ng-change="loadAllBranchByConditions()">
                                        <option value="">@Resources.ResourceBankAccount.SelectBank</option>
                                    </select>
                                    <b class="help-block" ng-if="form.BankId.$error.required">
                                        @string.Format(Resources.ResourceCommon.VMsgRequired_Name, Resources.ResourceBank.LblBank)
                                    </b>
                                </div>
                            </div>

                            <div class="form-group" show-errors id="searchdivid">
                                <div class=" padding-right-zero">
                                    <label class="col-xs-12 col-sm-3 col-md-3 control-label default-color">
                                        <b class="starStyle">*</b> @Resources.ResourceBranch.LblBranch
                                    </label>
                                </div>
                                <div class="col-xs-12 col-sm-5 col-md-5">
                                    <select data-ng-model="BranchId" class="form-control"
                                            data-ng-options="b.Id as b.Name for b in allBranchFromDb | orderBy: 'Name'" name="BankId" ng-required="true">
                                        <option value="">@Resources.ResourceBankAccount.SelectBranch</option>
                                    </select>
                                    <b class="help-block" ng-if="form.BankId.$error.required">
                                        @string.Format(Resources.ResourceCommon.VMsgRequired_Name, Resources.ResourceBranch.LblBranch)
                                    </b>
                                </div>
                            </div>

                            <div class="form-group" show-errors>
                                <div class=" padding-right-zero">
                                    <label class="col-xs-12 col-sm-3 col-md-3 control-label default-color">
                                        <b class="starStyle">*</b> @Resources.ResourceBankAccount.LblAccountName
                                    </label>
                                </div>
                                <div class="col-xs-12 col-sm-5 col-md-5">
                                    <input class="form-control" type="text" name="AccountName" ng-model="AccountName" required ng-maxlength="50" />
                                    <b class="help-block" ng-if="form.Name.$error.required">
                                        @string.Format(Resources.ResourceCommon.VMsgRequired_Name, Resources.ResourceBankAccount.LblAccountName)
                                    </b>
                                    <b class="help-block" ng-if="form.Name.$error.maxlength">@Resources.ResourceCommon.VMsgToo_Large</b>
                                </div>
                            </div>

                            <div class="form-group" show-errors>
                                <div class=" padding-right-zero">
                                    <label class="col-xs-12 col-sm-3 col-md-3 control-label default-color">
                                        @Resources.ResourceBankAccount.LblAccountNumber
                                    </label>
                                </div>
                                <div class="col-xs-12 col-sm-5 col-md-5">
                                    <input class="form-control" type="text" required name="AccountNumber" ng-model="AccountNumber" ng-maxlength="50" />

                                    <b class="help-block" ng-if="form.Address.$error.maxlength">@Resources.ResourceCommon.VMsgToo_Large</b>
                                </div>
                            </div>


                            <div class="form-group">
                                <div class="col-md-offset-3 col-sm-offset-3 col-xs-12 col-sm-8 col-md-8  padding-right-zero">
                                    <input type="button" ng-click="addBankAccount()" class="btn btn-primary" value=@Resources.ResourceCommon.LblSave /> <input type="button" ng-click="reset()" class="btn btn-default" value=@Resources.ResourceCommon.LblReset />
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-xs-12 col-sm-3 col-md-3">
            <modal title='@Resources.ResourceCommon.MsgHeaderSuccess' visible="showModalforSearch">
                <alert ng-repeat="alert in alerts" type="alert.type" close="closeAlert($index)">{{alert.msg}}</alert>
                <form name="form.update" role="form">
                    <div class="row">
                        <div class="col-xs-12 col-sm-12 col-md-12">
                            <span>{{messageModalObj.message}}</span>
                        </div>
                    </div>
                </form>
            </modal>
        </div>
    </div>

    <div class="panel panel-default">
        <div class="panel-heading text-lg text-bold text-uppercase">@Resources.ResourceBankAccount.LblBankAccount @Resources.ResourceCommon.lblList</div>
        <div class="panel-body border-green pt pb">
            <div class="row mb">
                <div class="col-sm-9 padding-left-zero">
                    <div class="col-sm-4">
                        <input type="text" ng-model="SearchText" placeholder='@Resources.ResourceCommon.TextBoxSearch_Watermark' class="form-control" />
                    </div>
                    <div class="col-sm-8 text-center-vertical">
                        @Resources.ResourceCommon.lblFiltered <b>{{ filtered.length }}</b> of <b>{{ allBankAccountFromDb.length}}</b> @Resources.ResourceBankAccount.LblBankAccount
                    </div>
                </div>
                <div class="col-sm-3 padding-right-zero">
                    <div class="col-sm-6 text-center-vertical">
                        <label>@Resources.ResourceCommon.lblPageSize:</label>
                    </div>

                    <div class="col-sm-6">
                        <select ng-model="entryLimit" class="form-control">
                            <option>3</option>
                            <option>5</option>
                            <option>10</option>
                            <option>20</option>
                            <option>50</option>
                            <option>100</option>
                        </select>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-12" ng-show="filtered.length > 0">
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th>@Resources.ResourceCountry.LblCountry <a ng-click="sort_by('CountryName');"><i class="glyphicon glyphicon-sort-by-alphabet"></i></a></th>
                                <th>@Resources.ResourceBank.LblBank <a ng-click="sort_by('BankName');"><i class="glyphicon glyphicon-sort-by-alphabet"></i></a></th>
                                <th>@Resources.ResourceBankAccount.LblBranchName <a ng-click="sort_by('BranchName');"><i class="glyphicon glyphicon-sort-by-alphabet"></i></a></th>
                                <th>@Resources.ResourceBankAccount.LblAccountName <a ng-click="sort_by('AccountName');"><i class="glyphicon glyphicon-sort-by-alphabet"></i></a></th>
                                <th>@Resources.ResourceBankAccount.LblAccountNumber <a ng-click="sort_by('AccountNumber');"><i class="glyphicon glyphicon-sort-by-alphabet"></i></a></th>

                                <th>@Resources.ResourceCommon.LblEdit </th>
                                <th>@Resources.ResourceCommon.LblDelete </th>
                            </tr>
                        </thead>
                        <tfoot>
                            <tr>
                                <th>@Resources.ResourceCountry.LblCountry <a ng-click="sort_by('CountryName');"><i class="glyphicon glyphicon-sort-by-alphabet"></i></a></th>
                                <th>@Resources.ResourceBank.LblBank <a ng-click="sort_by('BankName');"><i class="glyphicon glyphicon-sort-by-alphabet"></i></a></th>
                                <th>@Resources.ResourceBankAccount.LblBranchName <a ng-click="sort_by('BranchName');"><i class="glyphicon glyphicon-sort-by-alphabet"></i></a></th>
                                <th>@Resources.ResourceBankAccount.LblAccountName <a ng-click="sort_by('AccountName');"><i class="glyphicon glyphicon-sort-by-alphabet"></i></a></th>
                                <th>@Resources.ResourceBankAccount.LblAccountNumber <a ng-click="sort_by('AccountNumber');"><i class="glyphicon glyphicon-sort-by-alphabet"></i></a></th>

                                <th>@Resources.ResourceCommon.LblEdit </th>
                                <th>@Resources.ResourceCommon.LblDelete </th>
                            </tr>
                        </tfoot>
                        <tbody>
                            <tr ng-class="{'selected':data == selectedRow}" ng-repeat="data in filtered = (allBankAccountFromDb  | filter:SearchText | orderBy : predicate :reverse) | startFrom:(currentPage-1)*entryLimit | limitTo:entryLimit">
                              
                                <td>{{data.CountryName }} {{data.CountryId}}</td>
                                <td>{{data.BankName }}</td>
                                <td>{{data.BranchName }}</td>
                                <td>{{data.AccountName }}</td>
                                <td>{{data.AccountNumber }}</td>


                                <td><input type="button" value=@Resources.ResourceCommon.LblEdit class="btn btn-info btn-sm" ng-click="populateBankAccount(data)" /></td>
                                <td>
                                    <input type="button" value=@Resources.ResourceCommon.LblDelete class="btn btn-danger btn-sm" ng-bootbox-confirm='@Resources.ResourceCommon.MsgConfirm_Delete'
                                           ng-bootbox-confirm-action="deleteBankAccount(data)" ng-bootbox-confirm-action-cancel="confirmCallbackCancel(attr1, attr2)" />
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-12" ng-show="filtered.length > 0">
                    <div pagination="" max-size="15" page="currentPage" on-select-page="setPage(page)" boundary-links="true" total-items="filtered.length" items-per-page="entryLimit" class="pagination-small" previous-text="&laquo;" next-text="&raquo;"></div>
                </div>
            </div>
            <div class="col-xs-12 col-sm-12 col-md-12" ng-show="filtered.length == 0">
                <div class="col-xs-12 col-sm-12 col-md-12 alert alert-danger">
                    @Resources.ResourceCountry.LblNoCountryFound
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    app.filter('startFrom', function () {
        return function (input, start) {
            if (input) {
                start = +start; //parse to int
                return input.slice(start);
            }
            return [];
        }
    });
    app.factory('focus', function ($rootScope, $timeout) {
        return function (name) {
            $timeout(function () {
                $rootScope.$broadcast('focusOn', name);
            });
        };
    });
    app.factory('bankAccountService', ['$http', function ($http) {

        return {
            saveBankAccount: function (bankAccount) {
                return $http({
                    url: '/BankAccount/CreateBankAccount',
                    method: 'POST',
                    data: bankAccount
                });
            },
            getBankAccount: function (id) {
                return $http.get('/BankAccount/GetBankAccount/' + id);
            },
            getAllBankAccount: function () {
                return $http.get('/BankAccount/GetBankAccountList');
            },
            getAllCountry: function () {
                return $http.get('/Country/GetCountryList');
            },
            getAllBank: function () {
                return $http.get('/Bank/GetBankList');
            },
            getAllBranch: function (bankId, countryId) {

                var parameters = {
                    bankId: bankId,
                    countryId: countryId
                }
                return $http({
                    url: '/Branch/GetBranchListWithCondition',
                    method: "GET",
                    params: parameters
                });
                @*return $http.get('/Branch/GetBranchListWithCondition',
                    {
                        params: {
                            bankId: bankId,
                            countryId: countryId
                        }
                    });*@
                //return $http.get('/Branch/GetBranchList');
            },
            deleteBankAccount: function (bankAccount) {
                return $http({
                    url: '/BankAccount/DeleteBankAccount',
                    method: 'POST',
                    data: bankAccount
                });
            }
        };
    }]); app.controller('bankAccountCtrl', function ($scope, $timeout, $http, focus, $location, $anchorScroll, bankAccountService, $log, $ngBootbox) {
        $scope.messageModalObj = {};
        $scope.messageModalObj.message = '';
        loadAllBankAccount();
        $scope.showModalforSearch = false;
        // Add a new bankAccount
        $scope.addBankAccount = function () {
            $scope.$broadcast('show-errors-check-validity');
            if ($scope.form.$valid) {
                var bankAccount = {};
                bankAccount["Id"] = $scope.Id;
                bankAccount["BankId"] = $scope.BankId;
                bankAccount["BranchId"] = $scope.BranchId;
                bankAccount["AccountName"] = $scope.AccountName;
                bankAccount["AccountNumber"] = $scope.AccountNumber;


                bankAccountService.saveBankAccount(bankAccount)
                .then(function onSuccess(response) {
                    loadAllBankAccount();
                    $scope.messageModalObj.message = response.data.message;
                    $scope.showModalforSearch = true;
                    $timeout(function () { $scope.showModalforSearch = false; }, 3000);
                    $scope.reset();

                })
                .catch(function onError(response) {
                    $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInSaving');
                });
            }
        };
        // Populate bankAccount
        $scope.selectedRow = null;
        $scope.populateBankAccount = function (bankAccount) {
            $scope.selectedRow = bankAccount;
            $scope.Id = bankAccount.Id;
            $scope.CountryId = bankAccount.CountryId;
            $scope.BankId = bankAccount.BankId;
            $scope.AccountName = bankAccount.AccountName;
            $scope.AccountNumber = bankAccount.AccountNumber;
            $scope.loadAllBranchByConditionsForPopulate(bankAccount.BankId, bankAccount.CountryId);
            $scope.BranchId = bankAccount.BranchId;
            $location.hash('searchDivId');
            $anchorScroll();
            focus('focusMe');
        }


        $scope.reset = function () {
            $scope.$broadcast('show-errors-reset');
            $scope.Id = '';
            $scope.BankId = null;
            $scope.BranchId = null;
            $scope.AccountName = '';
            $scope.AccountNumber = '';
            $scope.selectedRow = null;
            loadAllBank();
        }

        $scope.deleteBankAccount = function (bankAccount) {
            bankAccountService.deleteBankAccount(bankAccount)
            .then(function onSuccess(response) {
                $scope.messageModalObj.message = response.data.message;
                $scope.showModalforSearch = true;
                $timeout(function () { $scope.showModalforSearch = false; }, 3000);
                loadAllBankAccount();
            })
            .catch(function onError(response) {
                $ngBootbox.alert('@Resources.ResourceCommon.MsgNot_deleted');
            });
        }

        function loadAllBankAccount() {
            $scope.allBankAccountFromDb = [];
            bankAccountService.getAllBankAccount()
                .then(function onSuccess(response) {
                    $scope.allBankAccountFromDb = response.data;
                })
                .catch(function onError(response) {
                    $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInLoading');
                });
        }

        loadAllCountry();
        function loadAllCountry() {
            $scope.allCountryFromDb = [];
            bankAccountService.getAllCountry()
                .then(function onSuccess(response) {
                    $scope.allCountryFromDb = response.data;
                })
                .catch(function onError(response) {
                    $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInLoading');
                });
        }

        loadAllBank();
        function loadAllBank() {
            $scope.allBankFromDb = [];
            bankAccountService.getAllBank()
                .then(function onSuccess(response) {
                    $scope.allBankFromDb = response.data;
                })
                .catch(function onError(response) {
                    $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInLoading');
                });
        }


        $scope.loadAllBranchByConditions = function () {
            $scope.allBranchFromDb = [];
            if ($scope.BankId && $scope.CountryId) {
                bankAccountService.getAllBranch($scope.BankId, $scope.CountryId)
                    .then(function onSuccess(response) {
                        $scope.allBranchFromDb = response.data;
                    })
                    .catch(function onError(response) {
                        $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInLoading');
                    });
            }

        }

        $scope.loadAllBranchByConditionsForPopulate = function(bankId, countryId) {
            $scope.allBranchFromDb = [];
                bankAccountService.getAllBranch(bankId, countryId)
                    .then(function onSuccess(response) {
                        $scope.allBranchFromDb = response.data;
                    })
                    .catch(function onError(response) {
                        $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInLoading');
                    });
            

        }




        $scope.currentPage = 1; //current page
        $scope.entryLimit = 10; //max no of items to display in a page
        $scope.filteredItems = $scope.allBankAccountFromDb.length; //Initially for no filter
        $scope.totalItems = $scope.allBankAccountFromDb.length;
        //$scope.maxSize = 15;

        $scope.setPage = function (pageNo) {
            $scope.currentPage = pageNo;
        };
        $scope.filter = function () {
            $timeout(function () {
                $scope.filteredItems = $scope.filtered.length;
            }, 9000);
        };
        $scope.sort_by = function (predicate) {
            $scope.predicate = predicate;
            $scope.reverse = !$scope.reverse;
        };
    });</script>

