@{
    ViewBag.Title = "ItemAdjustment";
    Layout = "~/Views/Shared/_Angular1_6_7NewMenuView.cshtml";
}

<div class="col-xs-12 col-sm-12" ng-controller="itemAdjustmentCtrl">
    @* ************ FORM - SECTION (Start)*************** *@
    <div class="panel panel-default">
        <div class="panel-heading text-lg text-bold text-uppercase">
            @Resources.ResourceItemAdjustment.LblItemAdjustment
        </div>
        <div class="panel-body  border-green pt pb">
            <div class="row">
                <div class="col-md-2 col-sm-4 col-xs-4 selector-container-div">
                    <div class="panel panel-default selector-container">
                        <div class="panel-body" style="padding: 0;">
                            <div class="form-group">
                                <label class="control-label">@Resources.ResourceCommon.LblYear</label>
                                <input type="text" class="form-control" ng-model="selectedYear" name="selectedYear" data-date-format="yyyy" bs-datepicker
                                       data-min-view="2" data-autoclose="true" ng-change="loadIdListByYear()" data-trigger="click">
                            </div>
                            <div class="form-group">
                                <label class="control-label">@Resources.ResourceItemAdjustment.LblList</label>
                                <div class="" style="height: 300px;">
                                    <select multiple data-ng-model="AdjustmentId" class="form-control listSelect" focus-on="focusMe"
                                            required data-ng-options="c.Id as c.Date for c in allIdListByYearFromDb" name="AdjustmentId"
                                            style="height: 100%; overflow-y: auto; padding: 0;" ng-change="loadIdDetailsById(AdjustmentId)">
                                        <option value="">@Resources.ResourceCommon.LblSelect</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-md-10 col-sm-8 col-xs-8">
                    <div class="form-horizontal">
                        <form name="form" novalidate>
                            <div class="row">
                                <div class="col-xs-6 col-sm-6 col-md-6">
                                    <div class="form-group" show-errors>
                                        <div class=" padding-right-zero">
                                            <label class="col-xs-12 col-sm-4 col-md-4 control-label default-color">
                                                <b class="starStyle"></b> @Resources.ResourceItemAdjustment.LblDate
                                            </label>
                                        </div>
                                        <div class="col-xs-12 col-sm-4 col-md-4">
                                            <input type="text" class="form-control" ng-required="true" ng-model="Date" name="Date" data-date-format="dd-MMM-yyyy " bs-datepicker data-autoclose="1">
                                            <b class="help-block" ng-if="form.Date.$error.required">
                                                @string.Format(Resources.ResourceCommon.VMsgRequired_Name, Resources.ResourceItemAdjustment.LblDate)
                                            </b>
                                        </div>
                                        <div class="col-xs-12 col-sm-4 col-md-4">
                                            <input type="text" class="form-control" size="8" ng-model="Date" name="Date" bs-timepicker>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-xs-6 col-sm-6 col-md-6">
                                    <div class="form-group" show-errors ng-show="AdjustmentId">
                                        <div class=" padding-right-zero">
                                            <label class="col-xs-12 col-sm-4 col-md-4 control-label default-color">
                                                @Resources.ResourceItemAdjustment.LblAuthorisedBy
                                            </label>
                                        </div>
                                        <div class="col-xs-12 col-sm-8 col-md-8">
                                            <select data-ng-model="AuthorisedBy" class="form-control"
                                                    data-ng-options="c.Id as c.FullName for c in allEmployeeFromDb | orderBy: 'FullName'" name="AuthorisedBy">
                                                <option value="">@Resources.ResourceCommon.LblSelect @Resources.ResourceItemAdjustment.LblPerson</option>
                                            </select>
                                        </div>
                                    </div>

                                    <div class="form-group" show-errors ng-show="AdjustmentId">
                                        <div class=" padding-right-zero">
                                            <label class="col-xs-12 col-sm-4 col-md-4 control-label default-color">
                                                <b class="starStyle"></b> @Resources.ResourceItemAdjustment.LblAuthorisedDate
                                            </label>
                                        </div>
                                        <div class="col-xs-12 col-sm-4 col-md-4">
                                            <input type="text" class="form-control" ng-model="AuthorisedDate" name="AuthorisedDate" data-date-format="dd-MMM-yyyy" bs-datepicker
                                                   data-min-view="0" data-autoclose="true">
                                        </div>
                                        <div class="col-xs-12 col-sm-4 col-md-4">
                                            <input type="text" class="form-control" size="8" ng-model="AuthorisedDate" name="AuthorisedDate" bs-timepicker>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <h3 class="heading">@Resources.ResourceItemAdjustment.LblAdjustmentDetails</h3>
                            <table class="table table-responsive">
                                <thead>
                                    <tr>
                                        <th class="col-md-2">
                                            @Resources.ResourceItemAdjustment.LblItemCategory
                                        </th>
                                        <th class="col-md-3">
                                            @Resources.ResourceItemAdjustment.LblItem
                                        </th>
                                        <th class="col-md-1">
                                            @Resources.ResourceItemAdjustment.LblUnit
                                        </th>
                                        <th class="col-md-1">
                                            @Resources.ResourceItemAdjustment.LblBinCardNo
                                        </th>
                                        <th class="col-md-1">
                                            @Resources.ResourceItemAdjustment.LblBinCardQuantity
                                        </th>
                                        <th class="col-md-2">
                                            @Resources.ResourceItemAdjustment.ActualQuantity
                                        </th>
                                        <th class="col-md-2">
                                            @Resources.ResourceItemAdjustment.LblAdjustmentReason
                                        </th>
                                        <th class="col-md-1">
                                            @Resources.ResourceCommon.LblAction
                                        </th>
                                    </tr>
                                </thead>

                                <tbody>
                                    <tr ng-repeat="aItemAdjustmentDet in ItemAdjustmentDetails">
                                        <td>
                                            <select data-ng-model="aItemAdjustmentDet.ItemCategoryId" class="form-control"
                                                    data-ng-options="c.Id as c.Name for c in allItemCategoryFromDb" name="ItemCategoryId" data-ng-change="getAllItemByCategoryId($index, aItemAdjustmentDet.ItemCategoryId)">
                                                <option value="">@Resources.ResourceCommon.LblSelect @Resources.ResourceItemAdjustment.LblItemCategory</option>
                                            </select>
                                        </td>
                                        <td>
                                            <select data-ng-model="aItemAdjustmentDet.ItemId" class="form-control"
                                                    data-ng-options="c.Id as c.Name for c in aItemAdjustmentDet.allItemFromDb" name="ItemId" data-ng-change="setUnitId($index, aItemAdjustmentDet.ItemId)">
                                                <option value="">@Resources.ResourceCommon.LblSelect @Resources.ResourceItemAdjustment.LblItem</option>
                                            </select>
                                        </td>                                           
                                        <td>
                                            <select data-ng-model="aItemAdjustmentDet.UnitId" class="form-control"
                                                    data-ng-options="c.Id as c.Name for c in allUnitofMeasurementFromDb | orderBy: 'Name'" name="UnitId">
                                                <option value="">@Resources.ResourceCommon.LblSelect @Resources.ResourceItemAdjustment.LblUnit</option>
                                            </select>
                                        </td>
                                        <td>
                                            <select ng-model="aItemAdjustmentDet.BinCardId" class="form-control"
                                                    data-ng-options="c.Id as c.CardNo for c in allBinCardFromDb | orderBy: ['CardNo']" name="BinCardId" data-ng-change="setBinQty($index, aItemAdjustmentDet.BinCardId)">
                                                <option value=" ">
                                                    @Resources.ResourceCommon.LblSelect @Resources.ResourceItemReceive.LblBinCard
                                                </option>
                                            </select>
                                        </td>
                                        <td>                                               
                                            <input data-ng-class="form-control" type="number" readonly class="form-control" ng-model="aItemAdjustmentDet.InventoryQuantity" name="InventoryQuantity">
                                        </td>
                                        <td>
                                            <input data-ng-class="form-control" type="number" class="form-control" ng-model="aItemAdjustmentDet.ActualQuantity" name="ActualQuantity" min="0">
                                        </td>
                                        <td>
                                            <input data-ng-class="form-control" type="text" class="form-control" ng-model="aItemAdjustmentDet.AdjustmentReason" name="AdjustmentReason">
                                        </td>
                                        <td>
                                            <input type="button" class=" btn btn-danger" ng-click="ItemAdjustmentDetails.splice($index,1);" title="@Resources.ResourceCommon.MsgConfirmRemoveFromTheDetails" value="@Resources.ResourceCommon.LblRemove" />
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                            <div class="col-md-2 padding-left-zero">
                                <input type="button" class=" btn btn-block btn-sm btn-info buttonadditem" ng-click="addNewDetail($event)" value="@Resources.ResourceCommon.LblAddDetailItem" style="width: 100%;" />
                            </div>
                        </form>
                        <br /><br />
                        <div class="row">
                            <div class="form-group">
                                <div class="col-xs-12 col-sm-8 col-md-8">
                                    <input type="button" ng-click="addItemAdjustment()" class="btn btn-primary" value="@Resources.ResourceCommon.LblSave" />
                                    <input type="button" ng-click="reset()" class="btn btn-default" value="@Resources.ResourceCommon.LblReset" />
                                    <input type="button" value=@Resources.ResourceCommon.LblDelete class="btn btn-danger " ng-bootbox-confirm='@Resources.ResourceCommon.MsgConfirm_Delete'
                                            ng-bootbox-confirm-action="deleteItemAdjustment(itemAdjustment)" ng-bootbox-confirm-action-cancel="confirmCallbackCancel(attr1, attr2)" />

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @* ************ FORM - SECTION (End)*************** *@


    @* ************ POP-UP MODEL (Start)*************** *@
    <div class="row">
        <div class="col-xs-12 col-sm-4 col-md-4">
            <modal title='@Resources.ResourceCommon.MsgHeaderSuccess' visible="showModalforSearch">
                <alert ng-repeat="alert in alerts" type="alert.type" close="closeAlert($index)">{{alert.msg}}</alert>
                <form name="form.update" role="form">
                    <div class="row">
                        <div class="col-xs-12 col-sm-12 col-md-12">
                            <span>{{messageModalObj.message}}</span>
                        </div>
                    </div>
                </form>
            </modal>
        </div>
    </div>
    @* ************ POP-UP MODEL (End)*************** *@
</div>

<script type="text/javascript">
    app.filter('startFrom', function () {
        return function (input, start) {
            if (input) {
                start = +start; //parse to int
                return input.slice(start);
            }
            return [];
        }
    });
    app.factory('focus', function ($rootScope, $timeout) {
        return function (name) {
            $timeout(function () {
                $rootScope.$broadcast('focusOn', name);
            });
        };
    });
    app.factory('itemAdjustmentService', ['$http', function ($http) {
        return {
            saveItemAdjustment: function (itemAdjustment) {
                return $http({
                    url: '/ItemAdjustment/CreateItemAdjustment',
                    method: 'POST',
                    data: itemAdjustment
                });
            },
            getItemAdjustment: function (id) {
                return $http.get('/ItemAdjustment/GetItemAdjustment/?id=' + id);
            },
            getAllItem: function () {
                return $http.get('/Item/GetItemList');
            },          
            getAllSupplier: function () {
                return $http.get('/Supplier/GetSupplierList');
            },
            getAllEmployee: function () {
                return $http.get('/Employee/GetEmployeeList');
            },
            getIdListByYear: function (year) {
                return $http.get('/ItemAdjustment/GetPiListByYear',
                {
                    params: { year: year }
                });
            },
            getAllItemByCategoryId: function (id) {
                return $http.get('/Item/GetItemListByCategoryId?id=' + id);
            },
            getAllItemCategory: function (groupType) {
                if (groupType === "" || groupType === undefined || groupType === null) {
                    return $http.get('/ItemCategory/GetItemCategoryListWithoutGroupType');
                } else {
                    return $http.get('/ItemCategory/GetItemCategoryListWithGroupType?groupType=' + groupType);
                }
            },
            getAllItemAdjustment: function () {
                return $http.get('/ItemAdjustment/GetItemAdjustmentListByGroupType');
            },
            getAllUnitOfMesurement: function () {
                return $http.get('/UnitOfMeasurement/GetUnitOfMeasurementList');
            },
            getAllCurrency: function () {
                return $http.get('/Currency/GetCurrencyList');
            },
            getAllBinCard: function () {
                return $http.get('/BinCard/GetBinCardList');
            },
            deleteItemAdjustment: function (itemAdjustment) {
                return $http({
                    url: '/ItemAdjustment/DeleteItemAdjustment',
                    method: 'POST',
                    data: itemAdjustment
                });
            },
        };
    }]);

    app.controller('itemAdjustmentCtrl', function ($scope, $timeout, $http, focus, $location, $anchorScroll, itemAdjustmentService, $log, $ngBootbox) {
        $scope.editmode = false;
        $scope.selectedYear = new Date();
        $scope.Date = new Date();
        $scope.doit = function (index) {
            alert(index);
        }

        $scope.ItemAdjustmentDetails = [];

        $scope.ItemAdjustmentDetails.push({ Id: '', ItemAdjustmentId: '', ItemId: '', ItemCategoryId: '', ActualQuantity: '', UnitId: '', BinCardId: '', AdjustmentReason: '' });

        $scope.addNewDetail = function ($event) {
            $scope.ItemAdjustmentDetails.push({ Id: '', ItemAdjustmentId: '', ItemId: '', ItemCategoryId: '', ActualQuantity: '', UnitId: '', BinCardId: '', AdjustmentReason: '' });
        }

        $scope.messageModalObj = {};
        $scope.messageModalObj.message = '';

        $scope.showModalforSearch = false;

        // Add a new itemAdjustment
        $scope.addItemAdjustment = function () {
            $scope.$broadcast('show-errors-check-validity');
            if ($scope.form.$valid) {
                var itemAdjustment = {};
                itemAdjustment["Id"] = $scope.Id;
               
                itemAdjustment["Date"] = $scope.Date;
                itemAdjustment["AuthorisedBy"] = $scope.AuthorisedBy;
                itemAdjustment["AuthorisedDate"] = $scope.AuthorisedDate;                

                itemAdjustment["ItemAdjustmentDetails"] = $scope.ItemAdjustmentDetails;

                if ($scope.ItemAdjustmentDetails != null && $scope.ItemAdjustmentDetails !== "" && $scope.ItemAdjustmentDetails != undefined) {
                    if ($scope.ItemAdjustmentDetails.length > 0) {
                        for (var i = 0; i < $scope.ItemAdjustmentDetails.length; i++) {
                            if ($scope.ItemAdjustmentDetails[i].ActualQuantity !== 0 && $scope.ItemAdjustmentDetails[i].ActualQuantity !== null && $scope.ItemAdjustmentDetails[i].ActualQuantity !== "") {
                                if ($scope.ItemAdjustmentDetails[i].BinCardId != null || $scope.ItemAdjustmentDetails[i].BinCardId != "") {
                                } else {
                                    $ngBootbox.alert('select BinCardId.');
                                    return;
                                }
                            } else {
                                $ngBootbox.alert('@Resources.ResourceItemAdjustment.LblQuantityRequiredIDDetails');
                                return;
                            }
                        }
                    } else {
                        $ngBootbox.alert('Need Item Adjustment details.');
                        return;
                    }
                } else {
                    $ngBootbox.alert('Need Item Adjustment details.');
                    return;
                }

                itemAdjustmentService.saveItemAdjustment(itemAdjustment)
                .then(function onSuccess(response) {
                    $scope.messageModalObj.message = response.data.message;
                    $scope.showModalforSearch = true;
                    $timeout(function () { $scope.showModalforSearch = false; }, 3000);
                    $scope.reset();
                    $scope.loadIdListByYear();

                })
                .catch(function onError(response) {
                    $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInSaving');
                });
            } else {
                $ngBootbox.alert('Fill up all required data.');
            }
        };

        // Delete Item Adjustment.............
        $scope.deleteItemAdjustment = function () {
            $scope.$broadcast('show-errors-check-validity');
            if ($scope.form.$valid) {
                var itemAdjustment = {};
                itemAdjustment["Id"] = $scope.Id;
               
                itemAdjustment["ItemAdjustmentDetails"] = $scope.ItemAdjustmentDetails;


                itemAdjustmentService.deleteItemAdjustment(itemAdjustment)
                    .then(function onSuccess(response) {
                        $scope.messageModalObj.message = response.data.message;
                        $scope.showModalforSearch = true;
                        $timeout(function () { $scope.showModalforSearch = false; }, 3000);
                        $scope.reset();
                        $scope.loadIdListByYear();
                    });
            }
        };

        $scope.getAllItemByCategoryId = function (index, categoryId) {
            $scope.ItemAdjustmentDetails[index].allItemFromDb = [];
            if (categoryId != null)
                itemAdjustmentService.getAllItemByCategoryId(categoryId)
                    .then(function onSuccess(response) {
                        $scope.ItemAdjustmentDetails[index].allItemFromDb = response.data;
                    })
                    .catch(function onError(response) {
                        $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInLoading');
                    });
        }

        $scope.populateItemAdjustment = function (rowvalue) {
            $scope.isCreateNewMode = false;
            $scope.Id = rowvalue.Id;
          
            $scope.Date = new Date(rowvalue.Date);
            $scope.AuthorisedBy = rowvalue.AuthorisedBy;
            $scope.AuthorisedDate = new Date(rowvalue.AuthorisedDate);

            $scope.ItemAdjustmentDetails = rowvalue.ItemAdjustmentDetails;
            for (x in rowvalue.ItemAdjustmentDetails) {             
                $scope.getAllItemByCategoryId(x, rowvalue.ItemAdjustmentDetails[x].ItemCategoryId);
            }
        }

        $scope.reset = function () {
            $scope.$broadcast('show-errors-reset');
            $scope.Id = '';
            $scope.Date = new Date();
            $scope.AuthorisedBy = '';
            $scope.AuthorisedDate = '';
            $scope.ItemAdjustmentDetails = [];
            $scope.ItemAdjustmentDetails.push({ Id: '', ItemAdjustmentId: '', ItemId: '', ItemCategoryId: '', ActualQuantity: '', UnitId: '', BinCardId: '', AdjustmentReason: '' });

            $scope.AdjustmentId = '';
        }

        $scope.setUnitId = function (index, itemId) {
            $scope.ItemAdjustmentDetails[index].UnitId = '';
            $scope.ItemAdjustmentDetails[index].IntemInventoryList = [];
            if (itemId != null)
                angular.forEach($scope.ItemAdjustmentDetails[index].allItemFromDb, function (value, key) {
                    if (value.Id === itemId) {
                        $scope.ItemAdjustmentDetails[index].UnitId = value.PurchaseunitId;
                        $scope.ItemAdjustmentDetails[index].IntemInventoryList = value.ItemInventorys;
                    }
                });
        }

        $scope.setBinQty = function (index,binCardId) {
            if (binCardId != null) {
                $scope.ItemAdjustmentDetails[index].InventoryQuantity = 0;
                angular.forEach($scope.ItemAdjustmentDetails[index].IntemInventoryList, function (value, key) {
                    if (value.BinCardId === binCardId) {
                        $scope.ItemAdjustmentDetails[index].InventoryQuantity = value.Quantity;
                    }
                });
            }
        }

        loadAllEmployee();
        function loadAllEmployee() {
            $scope.allEmployeeFromDb = [];
            itemAdjustmentService.getAllEmployee()
                .then(function onSuccess(response) {
                    $scope.allEmployeeFromDb = response.data;
                })
                .catch(function onError(response) {
                    $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInLoading');
                });
        }

        loadAllBinCard();
        function loadAllBinCard() {
            $scope.allBinCardFromDb = [];
            itemAdjustmentService.getAllBinCard()
                .then(function onSuccess(response) {
                    $scope.allBinCardFromDb = response.data;
                })
                .catch(function onError(response) {
                    $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInLoading');
                });
        }


        loadAllItem();
        function loadAllItem() {
            $scope.allItemFromDb = [];
            itemAdjustmentService.getAllItem()
                .then(function onSuccess(response) {
                    $scope.allItemFromDb = response.data;
                })
                .catch(function onError(response) {
                    $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInLoading');
                });
        }

        loadAllUnitOfMesurement();
        function loadAllUnitOfMesurement() {
            $scope.allUnitofMeasurementFromDb = [];
            itemAdjustmentService.getAllUnitOfMesurement()
                .then(function onSuccess(response) {
                    $scope.allUnitofMeasurementFromDb = response.data;
                })
                .catch(function onError(response) {
                    $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInLoading');
                });
        }

        $scope.loadIdDetailsById = function (adjustmentId) {
            $scope.allIdDetail = [];
            itemAdjustmentService.getItemAdjustment(adjustmentId)
                .then(function onSuccess(response) {
                    $scope.allIdDetail = response.data;
                    $scope.populateItemAdjustment(response.data);
                })
                .catch(function onError(response) {
                    $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInLoading');
                });
        }

        loadAllItemCategory();
        function loadAllItemCategory() {
            $scope.allItemCategoryFromDb = [];
            itemAdjustmentService.getAllItemCategory(@ViewBag.GroupType)
                .then(function onSuccess(response) {
                    $scope.allItemCategoryFromDb = response.data;
                })
                .catch(function onError(response) {
                    $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInLoading');
                });
        }

        $scope.loadIdListByYear = function () {
            var year = $scope.selectedYear;
            
            $scope.allIdListByYearFromDb = [];
            year = year.getFullYear();
            itemAdjustmentService.getIdListByYear(year)
                .then(function onSuccess(response) {
                    $scope.allIdListByYearFromDb = response.data;
                })
                .catch(function onError(response) {
                    $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInLoading');
                });
        }

        $scope.loadIdListByYear();        
    });
</script>