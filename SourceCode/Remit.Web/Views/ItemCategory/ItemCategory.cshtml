@{
    ViewBag.Title = @Resources.ResourceItemCategory.LblItemCategory;
    Layout = "~/Views/Shared/_Angular1_6_7NewMenuView.cshtml";
}

@*<div class="panel panel-default">
    <div class="panel-heading text-lg text-bold text-uppercase">Form fields</div>
    <div class="panel-body border-green  pt pb">
    </div>
</div>*@


<div class="col-xs-12 col-sm-12" ng-controller="itemCategoryCtrl">

    @* ************ FORM - SECTION (Start) *************** *@
    <div class="panel panel-default">
        <div class="panel-heading text-lg text-bold text-uppercase">@Resources.ResourceItemCategory.LblItemCategory</div>
        <div class="panel-body  border-green pt pb">
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-12">
                    <div class="form-horizontal">
                        <form name="form" novalidate>
                            <div class="form-group" show-errors>
                                <div class=" padding-right-zero">
                                    <label class="col-xs-12 col-sm-3 col-md-3 control-label default-color">
                                        <b class="starStyle"></b> @Resources.ResourceItemCategory.LblItemGroup
                                    </label>
                                </div>
                                <div class="col-xs-12 col-sm-5 col-md-5">
                                    <select data-ng-model="ItemGroupId" class="form-control"
                                            data-ng-options="c.Id as c.Name for c in allItemGroupFromDb | orderBy: 'Name'" name="ItemGroupId">
                                        <option value="">@Resources.ResourceCommon.LblSelect @Resources.ResourceItemCategory.LblItemGroup</option>
                                    </select>
                                </div>
                            </div>
                            <div class="form-group" show-errors id="searchdivid">
                                <div class=" padding-right-zero">
                                    <label class="col-xs-12 col-sm-3 col-md-3 control-label default-color">
                                        <b class="starStyle">*</b> @Resources.ResourceItemCategory.LblItemCategory
                                    </label>
                                </div>
                                <div class="col-xs-12 col-sm-5 col-md-5">
                                    <input class="form-control" type="text" name="Name" ng-model="Name" required ng-maxlength="50" focus-on="focusMe" />
                                    <b class="help-block" ng-if="form.Name.$error.required">
                                        @string.Format(Resources.ResourceCommon.VMsgRequired_Name, Resources.ResourceItemCategory.LblItemCategory)
                                    </b>

                                    <b class="help-block" ng-if="form.Name.$error.maxlength">@Resources.ResourceCommon.VMsgToo_Large</b>

                                </div>
                            </div>
                            <div class="form-group" show-errors>
                                <div class=" padding-right-zero">
                                    <label class="col-xs-12 col-sm-3 col-md-3 control-label default-color">
                                        <b class="starStyle"></b> @Resources.ResourceItemCategory.LblDescription
                                    </label>
                                </div>
                                <div class="col-xs-12 col-sm-5 col-md-5">
                                    <input class="form-control" type="text" name="Description" ng-model="Description"  />
                                     </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-3 col-sm-offset-3 col-xs-12 col-sm-8 col-md-8  padding-right-zero">
                                    <input type="button" ng-click="addItemCategory()" class="btn btn-primary" value=@Resources.ResourceCommon.LblSave />
                                    <input type="button" ng-click="reset()" class="btn btn-default" value=@Resources.ResourceCommon.LblReset />
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @* ************ FORM - SECTION (End)*************** *@


    @* ************ POP-UP MODEL (Start)*************** *@
    <div class="row">
        <div class="col-xs-12 col-sm-3 col-md-3">
            <modal title='@Resources.ResourceCommon.MsgHeaderSuccess' visible="showModalforSearch">
                <alert ng-repeat="alert in alerts" type="alert.type" close="closeAlert($index)">{{alert.msg}}</alert>
                <form name="form.update" role="form">
                    <div class="row">
                        <div class="col-xs-12 col-sm-12 col-md-12">
                            <span>{{messageModalObj.message}}</span>
                        </div>
                    </div>
                </form>
            </modal>
        </div>
    </div>
    @* ************ POP-UP MODEL (End)*************** *@


    @* ************ TABLE - SECTION (Start)*************** *@

    <div class="panel panel-default">
        <div class="panel-heading text-lg text-bold text-uppercase">@Resources.ResourceItemCategory.LblItemCategory @Resources.ResourceCommon.lblList</div>
        <div class="panel-body border-green  pt pb">
            <div class="row mb">
                <div class="col-sm-8 padding-left-zero">
                    <div class="col-sm-4">
                        <input type="text" ng-model="SearchText" placeholder='@Resources.ResourceCommon.TextBoxSearch_Watermark' class="form-control" />
                    </div>
                    <div class="col-sm-8 text-center-vertical">
                        @Resources.ResourceCommon.lblFiltered <b>{{ filtered.length }}</b> of <b>{{ allItemCategoryFromDb.length}}</b> @Resources.ResourceItemCategory.LblTotalItemCategory
                    </div>
                </div>
                <div class="col-sm-4 padding-right-zero">
                    <div class="col-sm-6 text-center-vertical">
                        <label>@Resources.ResourceCommon.lblPageSize:</label>
                    </div>

                    <div class="col-sm-6">
                        <select ng-model="entryLimit" class="form-control">
                            <option>3</option>
                            <option>5</option>
                            <option>10</option>
                            <option>20</option>
                            <option>50</option>
                            <option>100</option>
                        </select>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-12" ng-show="filtered.length > 0">
                    <div class="table-responsive">
                        <table class="table table-bordered">
                            <thead>
                                <tr>
                                    <th>@Resources.ResourceItemCategory.LblItemGroup <a ng-click="sort_by('ItemGroupName');"><i class="glyphicon glyphicon-sort-by-alphabet"></i></a></th>
                                    <th>@Resources.ResourceItemCategory.LblItemCategory <a ng-click="sort_by('Name');"><i class="glyphicon glyphicon-sort-by-alphabet"></i></a></th>
                                    <th>@Resources.ResourceItemCategory.LblDescription <a ng-click="sort_by('Description');"><i class="glyphicon glyphicon-sort-by-alphabet"></i></a></th>
                                    <th>@Resources.ResourceCommon.LblEdit </th>
                                    <th>@Resources.ResourceCommon.LblDelete </th>
                                </tr>
                            </thead>
                            <tfoot>
                                <tr>
                                    <th>@Resources.ResourceItemCategory.LblItemGroup <a ng-click="sort_by('ItemGroupName');"><i class="glyphicon glyphicon-sort-by-alphabet"></i></a></th>
                                    <th>@Resources.ResourceItemCategory.LblItemCategory <a ng-click="sort_by('Name');"><i class="glyphicon glyphicon-sort-by-alphabet"></i></a></th>
                                    <th>@Resources.ResourceItemCategory.LblDescription <a ng-click="sort_by('Description');"><i class="glyphicon glyphicon-sort-by-alphabet"></i></a></th>
                                    <th>@Resources.ResourceCommon.LblEdit </th>
                                    <th>@Resources.ResourceCommon.LblDelete </th>
                                </tr>
                            </tfoot>
                            <tbody>
                                <tr ng-class="{'selected':data == selectedRow}" ng-repeat="data in filtered = (allItemCategoryFromDb  | filter:SearchText | orderBy : predicate :reverse) | startFrom:(currentPage-1)*entryLimit | limitTo:entryLimit">
                                    <td>{{data.ItemGroupName }}</td>
                                    <td>{{data.Name }}</td>
                                    <td>{{data.Description }}</td>
                                    <td><input type="button" value=@Resources.ResourceCommon.LblEdit class="btn btn-info btn-sm" ng-click="populateItemCategory(data)" /></td>
                                    <td>
                                        <input type="button" value=@Resources.ResourceCommon.LblDelete class="btn btn-danger btn-sm " ng-bootbox-confirm='@Resources.ResourceCommon.MsgConfirm_Delete'
                                               ng-bootbox-confirm-action="deleteItemCategory(data)" ng-bootbox-confirm-action-cancel="confirmCallbackCancel(attr1, attr2)" />
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-12" ng-show="filtered.length > 0">
                    <div pagination="" max-size="15" page="currentPage" on-select-page="setPage(page)" boundary-links="true" total-items="filtered.length" items-per-page="entryLimit" class="pagination-small" previous-text="&laquo;" next-text="&raquo;"></div>
                </div>
            </div>
            <div class="col-xs-12 col-sm-12 col-md-12" ng-show="filtered.length == 0">
                <div class="col-xs-12 col-sm-12 col-md-12 alert alert-danger">
                    @Resources.ResourceItemCategory.LblNoItemCategoryFound
                </div>
            </div>
        </div>
    </div>
    @* ************ TABLE - SECTION (End)*************** *@

</div>



@* ************ SCRIPT - SECTION (Start) *************** *@

<script type="text/javascript">
    app.filter('startFrom', function () {
        return function (input, start) {
            if (input) {
                start = +start; //parse to int
                return input.slice(start);
            }
            return [];
        }
    });
    app.factory('focus', function ($rootScope, $timeout) {
        return function (name) {
            $timeout(function () {
                $rootScope.$broadcast('focusOn', name);
            });
        };
    });
    app.factory('itemCategoryService', ['$http', function ($http) {

        return {
            saveItemCategory: function (itemCategory) {
                return $http({
                    url: '/ItemCategory/CreateItemCategory',
                    method: 'POST',
                    data: itemCategory
                });
            },
            getItemCategory: function (id) {                
                return $http.get('/ItemCategory/GetItemCategory/' + id);
            },
            getAllItemCategory: function (groupType) {
                if (groupType === "" || groupType === undefined || groupType === null) {
                    return $http.get('/ItemCategory/GetItemCategoryListWithoutGroupType');
                } else {
                    return $http.get('/ItemCategory/GetItemCategoryListWithGroupType?groupType=' + groupType);
                }
            },
            getAllItemGroup: function (groupType) {
                if (groupType === "" || groupType === undefined || groupType === null) {
                    return $http.get('/ItemGroup/GetItemGroupListWithoutGroupType');
                } else {
                    return $http.get('/ItemGroup/GetItemGroupListWithGroupType?groupType=' + groupType);
                }
                //return $http.get('/ItemGroup/GetItemGroupList');
            },
            deleteItemCategory: function (itemCategory) {
                return $http({
                    url: '/ItemCategory/DeleteItemCategory',
                    method: 'POST',
                    data: itemCategory
                });
            }
        };
    }]);app.controller('itemCategoryCtrl', function ($scope, $timeout, $http, focus, $location, $anchorScroll, itemCategoryService, $log, $ngBootbox) {


        if ('@ViewBag.permission' == "NO") {
            $scope.NoPermission = true;
        }
        $scope.messageModalObj = {};
        $scope.messageModalObj.message = '';
        loadAllItemCategory();
        $scope.showModalforSearch = false;
        // Add a new itemCategory
        $scope.addItemCategory = function () {
            $scope.$broadcast('show-errors-check-validity');
            if ($scope.form.$valid) {
                var itemCategory = {};
                itemCategory["Id"] = $scope.Id;
                itemCategory["Name"] = $scope.Name;
                itemCategory["ItemGroupId"] = $scope.ItemGroupId;
                itemCategory["Description"] = $scope.Description;

                itemCategoryService.saveItemCategory(itemCategory)
                .then(function onSuccess(response) {
                    loadAllItemCategory();
                    $scope.messageModalObj.message = response.data.message;
                    $scope.showModalforSearch = true;
                    $timeout(function () { $scope.showModalforSearch = false; }, 3000);
                    $scope.reset();

                })
                .catch(function onError(response) {
                    $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInSaving');
                });
            }
        };
        // Populate itemCategory

        $scope.selectedRow = null;
        $scope.populateItemCategory = function (rowvalue) {
            $scope.selectedRow = rowvalue;
            $scope.Id = rowvalue.Id;
            $scope.Name = rowvalue.Name;
            $scope.ItemGroupId = rowvalue.ItemGroupId;
            $scope.Description = rowvalue.Description;
            $location.hash('searchDivId');
            $anchorScroll();
            focus('focusMe');
            $scope.desableIdField = true;
        }

        $scope.reset = function () {
            $scope.$broadcast('show-errors-reset');
            $scope.selectedRow = null;
            $scope.Id = '';
            $scope.Name = '';
            $scope.ItemGroupId = '';
            $scope.Description = '';
        }

        $scope.deleteItemCategory = function (itemCategory) {
            itemCategoryService.deleteItemCategory(itemCategory)
            .then(function onSuccess(response) {
                $scope.messageModalObj.message = response.data.message;
                $scope.showModalforSearch = true;
                $timeout(function () { $scope.showModalforSearch = false; }, 3000);
                $scope.reset();
                loadAllItemCategory();
            })
            .catch(function onError(response) {
                $ngBootbox.alert('@Resources.ResourceCommon.MsgNot_deleted');
            });
        }
        // Load employee
        function loadAllItemCategory() {
            $scope.allItemCategoryFromDb = [];
            itemCategoryService.getAllItemCategory(@ViewBag.GroupType)
                    .then(function onSuccess(response) {
                        $scope.allItemCategoryFromDb = response.data;
                    })
                    .catch(function onError(response) {
                        $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInLoading');
                    });
        }

        loadAllItemGroup();
        function loadAllItemGroup() {
            $scope.allItemGroupFromDb = [];
            itemCategoryService.getAllItemGroup()
                .then(function onSuccess(response) {
                    $scope.allItemGroupFromDb = response.data;
                })
                .catch(function onError(response) {
                    $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInLoading');
                });
        }

        $scope.currentPage = 1; //current page
        $scope.entryLimit = 10; //max no of items to display in a page
        $scope.filteredItems = $scope.allItemCategoryFromDb.length; //Initially for no filter
        $scope.totalItems = $scope.allItemCategoryFromDb.length;
        //$scope.maxSize = 15;

        $scope.setPage = function (pageNo) {
            $scope.currentPage = pageNo;
        };
        $scope.filter = function () {
            $timeout(function () {
                $scope.filteredItems = $scope.filtered.length;
            }, 9000);
        };
        $scope.sort_by = function (predicate) {
            $scope.predicate = predicate;
            $scope.reverse = !$scope.reverse;
        };
    });</script>
