@{
    ViewBag.Title = Resources.ResourceItemIssue.LblItemIssue;
    Layout = "~/Views/Shared/_Angular1_6_7NewMenuView.cshtml";
}

<style>
    input[type=number]:-webkit-inner-spin-button,
    input[type=number]:-webkit-outer-spin-button {
        -webkit-appearance: none;
        -moz-appearance: none;
        margin: 0;
    }
</style>

<div class="col-xs-12 col-sm-12" ng-controller="itemIssueCtrl">
    <div class="panel panel-default">
        <div class="panel-heading text-lg text-bold text-uppercase">
            @Resources.ResourceItemIssue.LblItemIssue
        </div>
        <div class="panel-body  border-green pt pb">
            <div class="row">
                <div class="col-md-2 col-sm-4 col-xs-4 selector-container-div">
                    <div class="panel panel-default selector-container">
                        <div class="panel-body" style="padding: 0;">
                            <div class="form-group">
                                <label class="control-label">@Resources.ResourceCommon.LblYear</label>
                                <input type="text" class="form-control" ng-model="selectedYear" name="selectedYear" data-date-format="MMM-yyyy" bs-datepicker
                                       data-min-view="1" data-autoclose="true" ng-change="loadAllIssuedListByYearMonth()" data-trigger="click">
                            </div>

                            <select data-ng-model="selectedStatus" class="form-control" name="selectedStatus" ng-change="reset()">
                                <option value="">@Resources.ResourceItemDemand.All</option>
                                <option value="@((int)Remit.Service.Enums.CommonEnum.Pending)">@Remit.Service.Enums.CommonEnum.Pending</option>
                                <option value="@((int)Remit.Service.Enums.CommonEnum.Approved)">@Remit.Service.Enums.CommonEnum.Approved</option>
                                <option value="@((int)Remit.Service.Enums.CommonEnum.Rejected)">@Remit.Service.Enums.CommonEnum.Rejected</option>
                            </select>

                            <div class="form-group">
                                <label class="control-label">@Resources.ResourceItemIssue.IssueList</label>
                                <div class="" style="height: 300px;">
                                    <select multiple data-ng-model="IssueId" class="form-control listSelect" focus-on="focusMe"
                                            data-ng-options="c.Id as c.IssueNo for c in allissueListByYear | filter:{'Status':selectedStatus}:false" name="IssueId"
                                            style="height: 100%; overflow-y: auto; padding: 0;" ng-change="loadIssueDetailsByIssueId(IssueId)">
                                        @*<option value="">@Resources.ResourceCommon.LblSelect @Resources.ResourceProformaInvoice.LblSupplier</option>*@
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-10 col-sm-8 col-xs-8">
                    <div class="form-horizontal">
                        <form name="form" novalidate>
                            <div class="row">
                                <div class="col-xs-6 col-sm-6 col-md-6">
                                    <div class="form-group" show-errors>
                                        <div class="padding-right-zero">
                                            <label class="col-xs-12 col-sm-4 col-md-4 control-label default-color">
                                                <b class="starStyle">*</b> @Resources.ResourceItemIssue.LblIssueVoucherNo
                                            </label>
                                        </div>
                                        <div class="col-xs-12 col-sm-8 col-md-8">
                                            <input class="form-control" type="text" name="IssueNo" ng-model="IssueNo" required ng-maxlength="50" ng-disabled="true" />
                                            <b class="help-block" ng-if="form.IssueNo.$error.required">
                                                @string.Format(Resources.ResourceCommon.VMsgRequired_Name, Resources.ResourceItemIssue.LblIssueVoucherNo)
                                            </b>
                                            <b class="help-block" ng-if="form.IssueNo.$error.maxlength">@Resources.ResourceCommon.VMsgToo_Large</b>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-xs-6 col-sm-6 col-md-6">
                                    <div class="form-group">
                                        <div class=" padding-right-zero">
                                            <label class="col-xs-12 col-sm-4 col-md-4 control-label default-color">
                                                @Resources.ResourceItemIssue.LblDemandNo
                                            </label>
                                        </div>
                                        <div class="col-xs-12 col-sm-8 col-md-8">
                                            @*<input type="text" ng-model="DemandNo" class="form-control text-uppercase" auto-complete-directive url="{{DemandNoURL}}" name="DemandNo" ng-disabled="selectedRow!=null" placeholder="type to search..." ng-keyup="GetItemDemandDetail($event,false)" />
                                                <b class="help-block" ng-if="form.DemandNo.$error.required">
                                                        @string.Format(Resources.ResourceCommon.VMsgRequired_Name, Resources.ResourceItemIssue.LblDemandNo)
                                                    </b>*@
                                            <select data-ng-model="DemandNo" class="form-control" ng-hide="editmode"
                                                    data-ng-options="c.Id as c.DemandNo for c in DemandNoURL" name="DemandNo" ng-change="GetItemDemandDetail()" ng-disabled="selectedRow!=null">
                                                <option value="">@Resources.ResourceCommon.LblSelect @Resources.ResourceItemIssue.LblDemandNo</option>
                                            </select>
                                            <input type="text" ng-model="DemandNoName" class="form-control" ng-show="editmode" ng-disabled="true" />
                                        </div>

                                    </div>
                                </div>
                            </div>

                            <div class="row" ng-hide="IssueId">
                                <div class="col-xs-6 col-sm-6 col-md-6">
                                    <div class="form-group">
                                        <div class="padding-right-zero">
                                            <label class="col-xs-12 col-sm-4 col-md-4 control-label default-color">
                                                <b class="starStyle"></b> @Resources.ResourceItemIssue.LblDemandedBy
                                            </label>
                                        </div>
                                        <div class="col-xs-12 col-sm-8 col-md-8">
                                            <input class="form-control" type="text" name="DemandedByName" ng-model="DemandedByName" ng-disabled="true" />
                                        </div>
                                    </div>
                                </div>
                                <div class="col-xs-6 col-sm-6 col-md-6">
                                    <div class="form-group">
                                        <div class="padding-right-zero">
                                            <label class="col-xs-12 col-sm-4 col-md-4 control-label default-color">
                                                <b class="starStyle"></b> @Resources.ResourceItemIssue.LblDemandUsage
                                            </label>
                                        </div>
                                        <div class="col-xs-12 col-sm-8 col-md-8">
                                            <input class="form-control" type="text" name="DemandUsage" ng-model="DemandUsage" ng-disabled="true" />
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-xs-6 col-sm-6 col-md-6">
                                    <div class="form-group" show-errors>
                                        <div class=" padding-right-zero">
                                            <label class="col-xs-12 col-sm-4 col-md-4 control-label default-color">
                                                <b class="starStyle">*</b> @Resources.ResourceItemIssue.IssuedBy
                                            </label>
                                        </div>
                                        <div class="col-xs-12 col-sm-8 col-md-8">
                                            <select data-ng-model="IssuedBy" class="form-control" ng-required="true" ng-disabled="true"
                                                    data-ng-options="c.Id as c.FullName for c in allEmployeeFromDb | orderBy: 'FullName'" name="IssuedBy">
                                                <option value="">@Resources.ResourceCommon.LblSelect</option>
                                            </select>
                                            <b class="help-block" ng-if="form.IssuedBy.$error.required">
                                                @string.Format(Resources.ResourceCommon.VMsgRequired_Name, Resources.ResourceItemIssue.IssuedBy)
                                            </b>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-xs-6 col-sm-6 col-md-6">
                                    <div class="form-group">
                                        <div class=" padding-right-zero">
                                            <label class="col-xs-12 col-sm-4 col-md-4 control-label default-color">
                                                @Resources.ResourceItemIssue.LblIssuingDate
                                            </label>
                                        </div>
                                        <div class="col-xs-12 col-sm-4 col-md-4">
                                            <input type="text" class="form-control" ng-model="IssuedDate" name="IssuedDate" data-date-format="dd-MMM-yyyy" bs-datepicker data-min-view="0" data-autoclose="true">
                                        </div>
                                        <div class="col-xs-12 col-sm-4 col-md-4">
                                            <input type="text" class="form-control" ng-model="IssuedDate" name="IssuedDate" bs-timepicker>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-xs-6 col-sm-6 col-md-6">
                                    <div class="form-group">
                                        <div class=" padding-right-zero">
                                            <label class="col-xs-12 col-sm-4 col-md-4 control-label default-color">
                                                @Resources.ResourceItemIssue.ReceivedBy
                                            </label>
                                        </div>
                                        <div class="col-xs-12 col-sm-8 col-md-8">
                                            <select data-ng-model="ReceivedBy" class="form-control"
                                                    data-ng-options="c.Id as c.FullName for c in allEmployeeFromDb | orderBy: 'FullName'" name="ReceivedBy">
                                                <option value="">@Resources.ResourceCommon.LblSelect</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-xs-6 col-sm-6 col-md-6">
                                    <div class="form-group">
                                        <div class=" padding-right-zero">
                                            <label class="col-xs-12 col-sm-4 col-md-4 control-label default-color">
                                                @Resources.ResourceItemIssue.DailyBallMill
                                            </label>
                                        </div>
                                        <div class="col-xs-12 col-sm-8 col-md-8">
                                            <input type="number" class="form-control" ng-model="DailyBallMill" name="DailyBallMill" />
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-xs-6 col-sm-6 col-md-6" ng-show="editmode">
                                    <div class="form-group">
                                        <div class=" padding-right-zero">
                                            <label class="col-xs-12 col-sm-4 col-md-4 control-label default-color">
                                                @Resources.ResourceItemIssue.LblIssueApprovedBy
                                            </label>
                                        </div>
                                        <div class="col-xs-12 col-sm-8 col-md-8">
                                            <input type="text" class="form-control" ng-model="AuthorisedByName" name="AuthorisedByName">
                                        </div>
                                    </div>
                                </div>
                                <div class="col-xs-6 col-sm-6 col-md-6" ng-show="editmode">
                                    <div class="form-group">
                                        <div class=" padding-right-zero">
                                            <label class="col-xs-12 col-sm-4 col-md-4 control-label default-color">
                                                @Resources.ResourceItemIssue.LblIssueApprovedOn
                                            </label>
                                        </div>
                                        <div class="col-xs-12 col-sm-4 col-md-4">
                                            <input type="text" class="form-control" ng-model="AuthorisedDate" name="AuthorisedDate" data-date-format="dd-MMM-yyyy" bs-datepicker data-min-view="0" data-autoclose="true">
                                        </div>
                                        <div class="col-xs-12 col-sm-4 col-md-4">
                                            <input type="text" class="form-control" ng-model="AuthorisedDate" name="AuthorisedDate" bs-timepicker>
                                        </div>
                                    </div>
                                </div>

                            </div>

                            <div class="row">
                                <div class="col-xs-6 col-sm-6 col-md-6" ng-show="editmode">
                                    <div class="form-group">
                                        <div class=" padding-right-zero">
                                            <label class="col-xs-12 col-sm-4 col-md-4 control-label default-color">
                                                @Resources.ResourceItemIssue.LblRemarks
                                            </label>
                                        </div>
                                        <div class="col-xs-12 col-sm-8 col-md-8">
                                            <textarea class="form-control" ng-model="Remarks" name="Remarks"></textarea>
                                        </div>
                                    </div>
                                </div>
                            </div>





                            @*<div class="row">
                                <div class="col-xs-12 col-sm-12 col-md-12">*@
                            <h3 class="heading">@Resources.ResourceItemIssue.LblItemIssueDetails</h3>
                            <table class="table table-responsive slidable-table" border="1">
                                <thead>
                                    <tr>
                                        <th>@Resources.ResourceItemDemand.ItemCat</th>
                                        <th>@Resources.ResourceItemDemand.Item</th>
                                        <th>@Resources.ResourceItem.LblSize</th>
                                        <th>@Resources.ResourceItem.LblSpecification</th>
                                        <th>@Resources.ResourceItemDemand.LblQuantityRequested</th>
                                        <th>@Resources.ResourceItemDemand.LblUnitOfMeasurement</th>
                                        <th>@Resources.ResourceItemIssue.LblPresentStock</th>
                                        <th>@Resources.ResourceItemIssue.Inventory</th>
                                        <th>
                                            @Resources.ResourceCommon.LblAction
                                        </th>

                                    </tr>
                                </thead>
                                <tbody>
                                    <tr ng-repeat="isuDet in IssueDetails">
                                        <td>
                                            <select data-ng-model="isuDet.ItemCategoryId" class="form-control" style="width:200px"
                                                    data-ng-options="c.Id as c.Name for c in allItemCategoryFromDb | orderBy: 'Name'" name="ItemCategoryId" ng-change="getAllItemByCategoryId($index,isuDet.ItemCategoryId)">
                                                <option value="">@Resources.ResourceCommon.LblSelect @Resources.ResourceItem.LblItemCategory</option>
                                            </select>
                                        </td>
                                        <td>
                                            <select data-ng-model="isuDet.ItemId" class="form-control" ng-change="getItemInfo($index,isuDet.ItemId)" style="width:200px"
                                                    data-ng-options="c.Id as c.Name for c in isuDet.allItemFromDb | orderBy: 'Name'" name="ItemId">
                                                <option value="">@Resources.ResourceCommon.LblSelect @Resources.ResourceProformaInvoice.LblItem</option>
                                            </select>
                                        </td>
                                        <td>
                                            <input data-ng-class="form-control" type="text" class="form-control" ng-disabled="true" style="width:70px"
                                                   ng-model="isuDet.Size" name="Size">
                                        </td>
                                        <td>
                                            <input data-ng-class="form-control" type="text" class="form-control" ng-disabled="true"
                                                   ng-model="isuDet.Specification" name="Specification">
                                        </td>
                                        <td>
                                            <input data-ng-class="form-control" style="text-align: right" type="number" class="form-control" ng-model="isuDet.Quantity" name="Quantity" min="0" ng-disabled="true">
                                        </td>
                                        <td>
                                            <input data-ng-class="form-control" type="text" class="form-control" ng-disabled="true" style="width:70px"
                                                   ng-model="isuDet.UnitIdName" name="UnitIdName">
                                        </td>
                                        <td>
                                            <input class="form-control" style="text-align: right;width:90px" type="number" name="TotalStockBalance" ng-model="isuDet.TotalStockBalance" ng-disabled="true" />
                                        </td>
                                        <td>
                                            <table class="table table-responsive table-bordered">
                                                <tr>
                                                    <th style="width: 34%">@Resources.ResourceItemIssue.BinCard</th>
                                                    <th style="width: 33%">@Resources.ResourceItemIssue.BinCardQty</th>
                                                    <th style="width: 33%">@Resources.ResourceItemIssue.LblQuantityIssued</th>
                                                </tr>
                                                <tr ng-repeat="aInv in isuDet.ItemInventoryViewModels">
                                                    <td style="width: 34%">
                                                        {{aInv.BinCardName}}
                                                    </td>
                                                    <td style="width: 33%">
                                                        {{aInv.Quantity}}
                                                    </td>
                                                    <td style="width: 33%">
                                                        <input class="form-control" type="number" style="text-align: right" ng-model="aInv.QuantityIssued" />
                                                    </td>
                                                    <td ng-hide="true">
                                                        <input class="form-control" type="number" style="text-align: right" ng-model="aInv.HandQtyForIssueUpdate" />
                                                    </td>
                                                </tr>
                                            </table>
                                        </td>
                                        <td>
                                            <input type="button" class=" btn btn-danger" ng-click="IssueDetails.splice($index, 1)" title="@Resources.ResourceCommon.MsgConfirmRemoveFromTheDetails" value="-" />
                                        </td>

                                    </tr>
                                </tbody>
                            </table>
                            <div class="col-md-2 padding-left-zero">
                                <input type="button" class=" btn btn-block btn-sm btn-info buttonadditem" ng-hide="DemandNo || !notApprovemode" ng-click="addNewDetail($event)" value="@Resources.ResourceCommon.LblAddDetailItem" style="width: 100%;" />
                            </div>
                            @*</div>
                                </div>*@
                        </form>
                        <br /><br />
                        <div class="row">
                            <div class="form-group">
                                <div class="col-xs-12 col-sm-6 col-md-6">
                                    <input type="button" ng-click="addIssue()" ng-hide="editmode" class="btn btn-primary" value=@Resources.ResourceCommon.LblSave />
                                    <input type="button" ng-click="ApproveReject('update')" ng-show="editmode && notApprovemode" class="btn btn-primary" value=@Resources.ResourceCommon.LblSave />
                                    <input type="button" ng-click="ApproveReject('update')" ng-show="editmode && !notApprovemode && IsApprovalRequired" class="btn btn-primary" value=@Resources.ResourceCommon.LblSave />
                                    <input type="button" @*ng-click="Delete()"*@ ng-show="editmode && !notApprovemode" class="btn btn-danger" value=@Resources.ResourceCommon.LblDelete ng-bootbox-confirm='@Resources.ResourceCommon.MsgConfirm_Delete'
                                           ng-bootbox-confirm-action="Delete()" ng-bootbox-confirm-action-cancel="confirmCallbackCancel(attr1, attr2)" />
                                    <input type="button" ng-click="reset()" class="btn btn-default" value=@Resources.ResourceCommon.LblReset />

                                    <input type="button" ng-click="ApproveReject('approve')" ng-show="editmode && !notApprovemode && IsApprovalRequired" class="btn btn-primary" value=@Resources.ResourceCommon.LblApprove />
                                    @*<input type="button" ng-click="ApproveReject('reject')" ng-show="editmode && notApprovemode" class="btn btn-warning" value=@Resources.ResourceCommon.LblReject />*@
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-xs-12 col-sm-4 col-md-4">
            <modal title='@Resources.ResourceCommon.MsgHeaderSuccess' visible="showModalforSearch">
                <form name="form.update" role="form">
                    <div class="row">
                        <div class="col-xs-12 col-sm-12 col-md-12">
                            <span>{{messageModalObj.message}}</span>
                        </div>
                    </div>
                </form>
            </modal>
        </div>
    </div>

</div>

@* ************ SCRIPT - SECTION (Start) *************** *@

<script type="text/javascript">
    app.directive('fileModel', ['$parse',
        function ($parse) {
            return {
                restrict: 'A',
                link: function (scope, element, attrs) {
                    var model = $parse(attrs.fileModel);
                    var modelSetter = model.assign;
                    element.bind('change', function () {
                        scope.$apply(function () {
                            modelSetter(scope, element[0].files[0]);
                        });
                    });
                }
            };
        }
    ]);
    app.filter('startFrom', function () {
        return function (input, start) {
            if (input) {
                start = +start; //parse to int
                return input.slice(start);
            }
            return [];
        }
    });
    app.factory('focus', function ($rootScope, $timeout) {
        return function (name) {
            $timeout(function () {
                $rootScope.$broadcast('focusOn', name);
            });
        };
    });
    app.factory('itemIssueService', ['$http', function ($http) {
        return {
            saveIssue: function (issue, issueList) {
                var params = { itemIssue: issue, demandDetList: issueList }
                return $http({
                    url: '/ItemIssue/CreateItemIssue',
                    method: 'POST',
                    type: "json",
                    data: JSON.stringify(params)
                });
            },

            approveRejectPreparedItem: function (issue, issueList, status) {
                var params = { itemIssue: issue, demandDetList: issueList, status: status }
                return $http({
                    url: '/ItemIssue/UpdateItemIssueStatus',
                    method: 'POST',
                    type: "json",
                    data: JSON.stringify(params)

                });
            },

            getItemDemandAndItemInventoryForIssue: function (id) {
                return $http.get('/ItemDemand/GetItemDemandAndItemInventoryForIssue?id=' + id);
            },
            getAllEmployee: function () {
                return $http.get('/Employee/GetEmployeeList');
            },

            getAllItemCategory: function (groupType) {
                if (groupType === "" || groupType === undefined || groupType === null) {
                    return $http.get('/ItemCategory/GetItemCategoryListWithoutGroupType');
                } else {
                    return $http.get('/ItemCategory/GetItemCategoryListWithGroupType?groupType=' + groupType);
                }
            },
            getAllItemByCategoryId: function (id) {
                return $http.get('/Item/GetItemListByCategoryIdFromIssue?id=' + id);
            },
            getAllItemByCategoryIdDemApproveNotRequired: function (id) {
                return $http.get('/Item/GetItemListByCategoryIdFromIssueDemApproveNotRequired?id=' + id);
            },
            genIssueNo: function () {
                var id = "Issue";
                return $http.get('/AutoGeneratedNo/GenNo?id=' + id);
            },
            getIssuedListByYear: function (year, month) {
                return $http.get('/ItemIssue/GetIssueListByYear', { params: { year: year, month: month + 1 } });
            },
            getItemIssue: function (id) {
                return $http.get('/ItemIssue/GetItemIssue?id=' + id);
            },
            deleteItemIssue: function (itemIssue) {
                return $http({
                    url: '/ItemIssue/DeleteItemIssue',
                    method: 'POST',
                    data: itemIssue
                });
            },

            getAllApprovedDemand: function () {
                return $http.get('/ItemDemand/GetItemDemandListFromDropDown/');
            },

        };
    }]);

    app.controller('itemIssueCtrl',
        function ($scope, $timeout, $http, focus, $location, $anchorScroll, itemIssueService, $log, $ngBootbox, $filter) {
            $scope.loadApprovedDemand = function () {
                $scope.DemandNoURL = [];
                itemIssueService.getAllApprovedDemand()
                    .then(function onSuccess(response) {
                        $scope.DemandNoURL = response.data;
                    })
                    .catch(function (xhr) {
                        $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInLoading');
                    });
            }
            $scope.loadApprovedDemand();


            $scope.selectedYear = new Date();
            $scope.IssuedDate = new Date();
            $scope.editmode = false;
            $scope.notApprovemode = true;
            $scope.AuthorisedByName = "@Remit.Web.Helpers.UserSession.GetUserFromSession().Employee.FullName";
            $scope.IssuedBy =@Remit.Web.Helpers.UserSession.GetUserFromSession().EmployeeId

            $scope.messageModalObj = {};
            $scope.messageModalObj.message = '';
            $scope.showModalforSearch = false;
            $scope.selectedRow = null;

            $scope.GenIssueNo = function () {
                itemIssueService.genIssueNo().then(function onSuccess(response) {
                    $scope.IssueNo = response.data;
                });
            }
            $scope.GenIssueNo();

            $scope.IssueDetails = [];
            $scope.IssueDetails.push({ Id: '', ItemCategoryId: '', ItemId: '', Quantity: '', UnitId: '', TotalStockBalance: '', ItemInventoryViewModels: [], HandQtyForIssueUpdate: '' });
            $scope.addNewDetail = function ($event) {
                $scope.IssueDetails.push({ Id: '', ItemCategoryId: '', ItemId: '', Quantity: '', UnitId: '', TotalStockBalance: '', ItemInventoryViewModels: [], HandQtyForIssueUpdate: '' });
            }

            $scope.ApproveReject = function (typeStatus) {
                var issue = {};
                issue["Id"] = $scope.Id;
                issue["IsuueNo"] = $scope.IssueNo;
                issue["Date"] = $scope.IssuedDate;
                issue["IssuedBy"] = $scope.IssuedBy;
                issue["ReceivedBy"] = $scope.ReceivedBy;
                issue["AuthorisedBy"] = $scope.AuthorisedBy;
                issue["AuthorisedDate"] = $scope.AuthorisedDate;
                issue["Remarks"] = $scope.Remarks;
                issue["ItemDemandId"] = $scope.DemandNo;
                issue["DailyBallMill"] = $scope.DailyBallMill;

                var issuelist = $scope.IssueDetails;
                if (issuelist != null && issuelist !== "") {
                    if ($scope.IssueDetails.length > 0) {
                        for (var i = 0; i < $scope.IssueDetails.length; i++) {
                            if ($scope.IssueDetails[i].ItemId !== undefined && $scope.IssueDetails[i].ItemId !== null && $scope.IssueDetails[i].ItemId !== "") {
                            } else {
                                $ngBootbox.alert('@Resources.ResourceItemDemand.ItemRequired');
                                return;
                            }
                            for (var j = 0; j < $scope.IssueDetails[i].ItemInventoryViewModels.length; j++) {
                                if ($scope.IssueDetails[i].ItemInventoryViewModels[j].Quantity + $scope.IssueDetails[i].ItemInventoryViewModels[j].HandQtyForIssueUpdate < $scope.IssueDetails[i].ItemInventoryViewModels[j].QuantityIssued) {
                                    $ngBootbox.alert('@Resources.ResourceItemIssue.MsgQtyIssuedExceededChangePls');
                                    return;
                                } else { }
                            }
                        }
                    } else {
                        $ngBootbox.alert('@Resources.ResourceItemIssue.NeedIssueDetails');
                        return;
                    }
                } else {
                    $ngBootbox.alert('@Resources.ResourceItemIssue.NeedIssueDetails');
                    return;
                }

                itemIssueService.approveRejectPreparedItem(issue, issuelist, typeStatus).then(function onSuccess(response) {
                    if (response.data.isSuccess === true) {
                        $ngBootbox.alert(response.data.message);
                        $scope.reset();
                        $scope.loadAllIssuedListByYearMonth();
                    }
                    else {
                        $ngBootbox.alert(response.data.message);
                    }
                });
            }
            $scope.addIssue = function () {
                $scope.$broadcast('show-errors-check-validity');
                if ($scope.form.$valid) {
                    var issue = {};
                    issue["Id"] = $scope.Id;
                    issue["IsuueNo"] = $scope.IssueNo;
                    issue["Date"] = $scope.IssuedDate;
                    issue["IssuedBy"] = $scope.IssuedBy;
                    issue["ReceivedBy"] = $scope.ReceivedBy;
                    issue["AuthorisedBy"] = $scope.AuthorisedBy;
                    issue["AuthorisedDate"] = $scope.AuthorisedDate;
                    issue["Remarks"] = $scope.Remarks;
                    issue["ItemDemandId"] = $scope.DemandNo;
                    issue["DailyBallMill"] = $scope.DailyBallMill;

                    var issuelist = $scope.IssueDetails;
                    if (issuelist != null && issuelist !== "") {
                        if ($scope.IssueDetails.length > 0) {
                            for (var i = 0; i < $scope.IssueDetails.length; i++) {
                                if ($scope.IssueDetails[i].ItemId !== undefined && $scope.IssueDetails[i].ItemId !== null && $scope.IssueDetails[i].ItemId !== "") {
                                } else {
                                    $ngBootbox.alert('@Resources.ResourceItemDemand.ItemRequired');
                                    return;
                                }

                                for (var j = 0; j < $scope.IssueDetails[i].ItemInventoryViewModels.length; j++) {
                                    if ($scope.IssueDetails[i].ItemInventoryViewModels[j].Quantity + $scope.IssueDetails[i].ItemInventoryViewModels[j].HandQtyForIssueUpdate < $scope.IssueDetails[i].ItemInventoryViewModels[j].QuantityIssued) {
                                        $ngBootbox.alert('@Resources.ResourceItemIssue.MsgQtyIssuedExceededChangePls');
                                        return;
                                    } else { }
                                }
                            }
                        } else {
                            $ngBootbox.alert('@Resources.ResourceItemIssue.NeedIssueDetails');
                            return;
                        }
                    } else {
                        $ngBootbox.alert('@Resources.ResourceItemIssue.NeedIssueDetails');
                        return;
                    }


                    itemIssueService.saveIssue(issue, issuelist).then(
                        function onSuccess(response) {
                            $scope.messageModalObj.message = response.data.message;
                            $scope.showModalforSearch = true;
                            $timeout(function () { $scope.showModalforSearch = false; }, 3000);
                            $scope.reset();
                            $scope.loadAllIssuedListByYearMonth();
                            $scope.loadApprovedDemand();
                        }).catch(function onError(response) {
                            $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInSaving');
                        });
                } else {
                    $ngBootbox.alert('@Resources.ResourceLCShipment.FillRequiredData');
                }
            }

            $scope.Delete = function () {
                if ($scope.Id !== undefined && $scope.Id !== null && $scope.Id !== "") {
                    var issue = {};
                    issue["Id"] = $scope.Id;
                    itemIssueService.deleteItemIssue(issue).then(function onSuccess(response) {
                        if (response.data.isSuccess === true) {
                            $ngBootbox.alert(response.data.message);
                            $scope.reset();
                            $scope.loadAllIssuedListByYearMonth();
                        } else {
                            $ngBootbox.alert(response.data.message);
                        }
                    }).catch(function onError(xhr) {
                        $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInSaving');
                    });
                } else {
                    $ngBootbox.alert('@Resources.ResourceCommon.MsgNot_deleted');
                    return;
                }
            }
            $scope.populateItemIssue = function (rowvalue) {
                $scope.selectedRow = rowvalue;
                $scope.Id = rowvalue.Id;
                $scope.Remarks = rowvalue.Remarks;
                $scope.IssueNo = rowvalue.IsuueNo;
                $scope.IssuedDate = new Date(rowvalue.Datestring);
                $scope.IssuedBy = rowvalue.IssuedBy;
                $scope.ReceivedBy = rowvalue.ReceivedBy;
                $scope.AuthorisedBy = rowvalue.AuthorisedBy;
                $scope.DemandNo = rowvalue.ItemDemandId;//rowvalue.DemandNo;
                $scope.DemandNoName = rowvalue.DemandNo;
                $scope.DailyBallMill = rowvalue.DailyBallMill;

                $scope.editmode = true;
                $scope.IsApprovalRequired = rowvalue.IsApprovalRequired;

                if (rowvalue.AuthorisedBy != null) {
                    $scope.notApprovemode = false;
                    if (!rowvalue.IsApprovalRequired) {
                        $scope.notApprovemode = true;
                    }
                    $scope.AuthorisedDate = new Date(rowvalue.AuthoriseDatestring);
                } else {
                    $scope.notApprovemode = true;
                    $scope.IsApprovalRequired = true;
                    $scope.AuthorisedDate = new Date();
                }

                $scope.Status = rowvalue.Status;

                $scope.IssueDetails = rowvalue.ItemIssueDetails;
                for (x in rowvalue.ItemIssueDetails) {
                    $scope.getAllItemByCategoryIdwhenPopulate(x, rowvalue.ItemIssueDetails[x].ItemCategoryId);
                }
                if ($scope.IssueDetails.length < 1) {
                    $scope.IssueDetails = [];
                    $scope.IssueDetails.push({ Id: '', ItemCategoryId: '', ItemId: '', Quantity: '', UnitId: '', TotalStockBalance: '', ItemInventoryViewModels: [], HandQtyForIssueUpdate: '' });
                }
            }

            $scope.reset = function () {
                $scope.$broadcast('show-errors-reset');
                $scope.selectedRow = null;
                $scope.editmode = false;
                $scope.notApprovemode = true;
                $scope.isCreateNewMode = true;
                $scope.Id = '';
                $scope.IssueId = '';
                $scope.IssueNo = '';
                $scope.ReceivedBy = '';
                $scope.IssuedDate = new Date();
                $scope.DemandNo = '';
                $scope.DailyBallMill = '';
                $scope.IssuedBy = @Remit.Web.Helpers.UserSession.GetUserFromSession().EmployeeId
                $scope.AuthorisedByName = '';
                $scope.AuthorisedDate = '';
                $scope.Remarks = "";
                $scope.DemandedByName = '';
                $scope.DemandUsage = '';
                $scope.IssueDetails = [];
                $scope.IssueDetails.push({ Id: '', ItemCategoryId: '', ItemId: '', Quantity: '', UnitId: '', TotalStockBalance: '', ItemInventoryViewModels: [], HandQtyForIssueUpdate: '' });
                $scope.IsApprovalRequired = false;
                $scope.GenIssueNo();
            }

            $scope.GetItemDemandDetail = function () {
                if ($scope.DemandNo !== undefined && $scope.DemandNo !== null && $scope.DemandNo !== "") {
                    itemIssueService.getItemDemandAndItemInventoryForIssue($scope.DemandNo).then(
                        function onSuccess(response) {
                            if (response.data.isSuccess) {
                                $scope.IssueDetails = response.data.demDetail.ItemDemandDetails;
                                $scope.DemandedByName = response.data.demDetail.DemandedByName;
                                $scope.DemandUsage = response.data.demDetail.DemandUsage;
                                for (x in $scope.IssueDetails) {
                                    $scope.getAllItemByCategoryIdwhenPopulate(x, $scope.IssueDetails[x].ItemCategoryId);
                                }
                            } else {
                                $scope.messageModalObj.message = response.data.mes;
                                $scope.showModalforSearch = true;
                                $timeout(function () { $scope.showModalforSearch = false; }, 3000);
                            }

                        }).catch(function onError(response) {
                            $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInSaving');
                        });
                } else {
                    $ngBootbox.alert('@Resources.ResourceItemIssue.NeedIssueDetails');
                    return;
                }
            }

            $scope.loadIssueDetailsByIssueId = function (issueId) {
                itemIssueService.getItemIssue(issueId)
                    .then(function onSuccess(response) {
                        $scope.populateItemIssue(response.data);
                    })
                    .catch(function onError(xhr) {
                        $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInLoading');
                    });
            }
            $scope.loadAllIssuedListByYearMonth = function () {
                var year = $scope.selectedYear;
                var month = year.getMonth();
                $scope.allissueListByYear = [];
                year = year.getFullYear();

                itemIssueService.getIssuedListByYear(year, month).then(function onSuccess(response) {
                    $scope.allissueListByYear = response.data;

                    if ('@ViewBag.IndexPending' == 1) {
                        $scope.selectedStatus = '@((int)Remit.Service.Enums.CommonEnum.Pending)';
                    }
                }).catch(function onError(xhr) {
                    $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInLoading');
                });
            }
            $scope.loadAllIssuedListByYearMonth();

            $scope.loadAllEmployee = function () {
                $scope.allEmployeeFromDb = [];
                itemIssueService.getAllEmployee()
                    .then(function onSuccess(response) {
                        $scope.allEmployeeFromDb = response.data;
                    })
                    .catch(function (xhr) {
                        $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInLoading');
                    });
            }
            $scope.loadAllEmployee();

            $scope.getAllItemByCategoryId = function (index, categoryId) {
                $scope.IssueDetails[index].allItemFromDb = [];
                $scope.IssueDetails[index].UnitId = '';
                $scope.IssueDetails[index].UnitIdName = '';
                if (categoryId != null)
                    itemIssueService.getAllItemByCategoryIdDemApproveNotRequired(categoryId)
                        .then(function onSuccess(response) {
                            $scope.IssueDetails[index].allItemFromDb = response.data;
                        }).catch(function onError(xhr) {
                            $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInLoading');
                        });
            }

            // Normally for populate, when select demand dropdown or edit/approve/delete/reject issue
            $scope.getAllItemByCategoryIdwhenPopulate = function (index, categoryId) {
                $scope.IssueDetails[index].allItemFromDb = [];
                if (categoryId != null)
                    itemIssueService.getAllItemByCategoryId(categoryId)
                        .then(function onSuccess(response) {
                            $scope.IssueDetails[index].allItemFromDb = response.data;
                        }).catch(function onError(xhr) {
                            $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInLoading');
                        });
            }

            $scope.getItemInfo = function (index, itemId) {
                $scope.IssueDetails[index].UnitId = '';
                if (itemId != null)
                    angular.forEach($scope.IssueDetails[index].allItemFromDb,
                        function (value, key) {
                            if (value.Id === itemId) {
                                $scope.IssueDetails[index].Size = value.Size;
                                $scope.IssueDetails[index].Specification = value.Specification;
                                $scope.IssueDetails[index].UnitIdName = value.UsageUnit;
                                $scope.IssueDetails[index].UnitId = value.UsageUnitId;
                                $scope.IssueDetails[index].ItemInventoryViewModels = value.ItemInventorys;
                                $scope.IssueDetails[index].TotalStockBalance = value.TotalStockBalance;
                                $scope.IssueDetails[index].HandQtyForIssueUpdate = 0;
                            }
                        });
            }

            loadAllItemCategory();
            function loadAllItemCategory() {
                $scope.allItemCategoryFromDb = [];
                itemIssueService.getAllItemCategory(@ViewBag.GroupType)
                    .then(function onSuccess(response) {
                        $scope.allItemCategoryFromDb = response.data;
                    })
                    .catch(function onError(xhr) {
                        $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInLoading');
                    });
            }

        });
</script>