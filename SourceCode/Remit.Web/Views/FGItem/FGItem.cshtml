@{
    ViewBag.Title = "FGItem";
    Layout = "~/Views/Shared/_Angular1_6_7NewMenuView.cshtml";
}

<div class="col-xs-12 col-sm-12" ng-controller="fgitemCtrl">

    @* ************ FORM - SECTION (Start) *************** *@
    <div class="panel panel-default">
        <div class="panel-heading text-lg text-bold text-uppercase">@Resources.ResourceFGItem.LblFGItem</div>
        <div class="panel-body  border-green pt pb">
            <div class="row">



                <div class="col-md-2 col-sm-4 col-xs-4 selector-container-div">
                    <div class="panel panel-default selector-container">
                        <div class="panel-body" style="padding: 0;">

                            <div class="form-group">
                                <div class=" padding-right-zero">
                                    <label class=" control-label default-color">
                                        <b class="starStyle"></b> @Resources.ResourceFGItem.Type
                                    </label>
                                </div>
                                <div class="">
                                    <select data-ng-model="Type" class="form-control"
                                            data-ng-options="c.Id as c.TypeName for c in allTypeFromDb | orderBy: 'TypeName'" name="Type" ng-required="false">
                                        <option value="">@Resources.ResourceFGItem.Select</option>
                                    </select>

                                </div>
                            </div>

                            <div class="form-group">
                                <label class="control-label">@Resources.ResourceFGItem.ResourceFGItemList</label>
                                <div class="" style="height: 300px; overflow: auto; ">
                                    <select multiple data-ng-model="itemId" class="form-control listSelect" focus-on="focusMe"
                                            required data-ng-options="c.Id as c.Code for c in allFGItemFromDb | filter:{'TypeId':Type}:false" name="itemId"
                                            style="height: 100%; overflow-y: auto; padding: 0;" ng-click="loadItemById(itemId);"></select>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-10 col-sm-8 col-xs-8">
                    <div class="form-horizontal">
                        <form name="form" novalidate>


                            <div class="form-group" show-errors id="searchdivid">
                                <div class=" padding-right-zero">
                                    <label class="col-xs-12 col-sm-3 col-md-3 control-label default-color">
                                        <b class="starStyle">*</b> @Resources.ResourceFGItem.Type
                                    </label>
                                </div>
                                <div class="col-xs-12 col-sm-6 col-md-6">
                                    <select data-ng-model="TypeId" class="form-control"
                                            data-ng-options="c.Id as c.TypeName for c in allTypeFromDb | orderBy: 'TypeName'" name="TypeId" ng-required="true" ng-change="selectType()">
                                        <option value="">@Resources.ResourceFGItem.Select</option>
                                    </select>
                                    <b class="help-block" ng-if="form.TypeId.$error.required">
                                        @string.Format(Resources.ResourceCommon.VMsgRequired_Name, Resources.ResourceFGItem.Type)
                                    </b>
                                </div>
                            </div>


                            <div class="form-group" show-errors id="searchdivid">
                                <div class=" padding-right-zero">
                                    <label class="col-xs-12 col-sm-3 col-md-3 control-label default-color">
                                        <b class="starStyle">*</b> @Resources.ResourceFGItem.Size
                                    </label>
                                </div>
                                <div class="col-xs-12 col-sm-6 col-md-6">
                                    <select data-ng-model="SizeId" class="form-control"
                                            data-ng-options="c.Id as c.Size for c in sizeFromDbByType | orderBy: 'Size'" name="SizeId" ng-required="true">
                                        <option value="">@Resources.ResourceFGItem.Selectsize</option>
                                    </select>
                                    <b class="help-block" ng-if="form.SizeId.$error.required">
                                        @string.Format(Resources.ResourceCommon.VMsgRequired_Name, Resources.ResourceFGItem.Size)
                                    </b>
                                </div>
                            </div>


                            <div class="form-group" show-errors id="searchdivid">
                                <div class=" padding-right-zero">
                                    <label class="col-xs-12 col-sm-3 col-md-3 control-label default-color">
                                        <b class="starStyle">*</b> @Resources.ResourceFGItem.Code
                                    </label>
                                </div>
                                <div class="col-xs-12 col-sm-6 col-md-6">
                                    <input class="form-control" type="text" name="Code" ng-model="Code" required ng-maxlength="50" focus-on="focusMe" />
                                    <b class="help-block" ng-if="form.Code.$error.required">
                                        @string.Format(Resources.ResourceCommon.VMsgRequired_Name, Resources.ResourceFGItem.Code)
                                    </b>

                                    <b class="help-block" ng-if="form.Code.$error.maxlength">@Resources.ResourceCommon.VMsgToo_Large</b>

                                </div>
                            </div>


                        <div class="form-group" show-errors id="searchdivid">
                            <div class=" padding-right-zero">
                                <label class="col-xs-12 col-sm-3 col-md-3 control-label default-color">
                                    <b class="starStyle">*</b> @Resources.ResourceFGItem.Name
                                </label>
                            </div>
                            <div class="col-xs-12 col-sm-6 col-md-6">
                                <input class="form-control" type="text" name="Name" ng-model="Name" required ng-maxlength="100" focus-on="focusMe" />
                                <b class="help-block" ng-if="form.Name.$error.required">
                                    @string.Format(Resources.ResourceCommon.VMsgRequired_Name, Resources.ResourceFGItem.Name)
                                </b>

                                <b class="help-block" ng-if="form.Name.$error.maxlength">@Resources.ResourceCommon.VMsgToo_Large</b>

                            </div>
                        </div>
                            
                            
                        <div class="form-group" show-errors id="searchdivid">
                            <div class=" padding-right-zero">
                                <label class="col-xs-12 col-sm-3 col-md-3 control-label default-color">
                                    <b class="starStyle"></b> @Resources.ResourceFGItem.Color
                                </label>
                            </div>
                            <div class="col-xs-12 col-sm-6 col-md-6">
                                <input class="form-control" type="text" name="Color" ng-model="Color"  ng-maxlength="50" focus-on="focusMe" />
                                
                                <b class="help-block" ng-if="form.Color.$error.maxlength">@Resources.ResourceCommon.VMsgToo_Large</b>

                            </div>
                        </div>


                        <div class="form-group" show-errors id="searchdivid">
                                <div class=" padding-right-zero">
                                    <label class="col-xs-12 col-sm-3 col-md-3 control-label default-color">
                                        <b class="starStyle">*</b> @Resources.ResourceFGItem.PackUnit
                                    </label>
                                </div>
                                <div class="col-xs-12 col-sm-6 col-md-6">
                                    <select data-ng-model="PackUnitId" class="form-control"
                                            data-ng-options="c.Id as c.UnitName for c in allPackUnitFromDb | orderBy: 'UnitName'" name="PackUnitId" ng-required="true">
                                        <option value="">@Resources.ResourceFGItem.SelectPackUnit</option>
                                    </select>
                                    <b class="help-block" ng-if="form.PackUnitId.$error.required">
                                        @string.Format(Resources.ResourceCommon.VMsgRequired_Name, Resources.ResourceFGItem.PackUnit)
                                    </b>
                                </div>
                            </div>


                            <div class="form-group" show-errors id="searchdivid">
                                <div class=" padding-right-zero">
                                    <label class="col-xs-12 col-sm-3 col-md-3 control-label default-color">
                                        <b class="starStyle">*</b> @Resources.ResourceFGItem.SalesUnit
                                    </label>
                                </div>
                                <div class="col-xs-12 col-sm-6 col-md-6">
                                    <select data-ng-model="SalesUnitId" class="form-control"
                                            data-ng-options="c.Id as c.UnitName for c in allPackUnitFromDb | orderBy: 'UnitName'" name="SalesUnitId" ng-required="true">
                                        <option value="">@Resources.ResourceFGItem.SelectSalesUnit</option>
                                    </select>
                                    <b class="help-block" ng-if="form.SalesUnitId.$error.required">
                                        @string.Format(Resources.ResourceCommon.VMsgRequired_Name, Resources.ResourceFGItem.SalesUnit)
                                    </b>
                                </div>
                            </div>

                            <div class="form-group" show-errors id="searchdivid">
                                <div class=" padding-right-zero">
                                    <label class="col-xs-12 col-sm-3 col-md-3 control-label default-color">
                                        <b class="starStyle">*</b> @Resources.ResourceFGItem.PackageToSalesRatio
                                    </label>
                                </div>
                                <div class="col-xs-12 col-sm-6 col-md-6">
                                    <input class="form-control" type="number" name="PackageToSalesRatio" ng-model="PackageToSalesRatio" required focus-on="focusMe" />
                                    <b class="help-block" ng-if="form.PackageToSalesRatio.$error.required">
                                        @string.Format(Resources.ResourceCommon.VMsgRequired_Name, Resources.ResourceFGItem.PackageToSalesRatio)
                                    </b>


                                </div>
                            </div>


                            <div class="form-group" show-errors id="searchdivid">
                                <div class=" padding-right-zero">
                                    <label class="col-xs-12 col-sm-3 col-md-3 control-label default-color">
                                        <b class="starStyle">*</b> @Resources.ResourceFGItem.PcsPerCartoon
                                    </label>
                                </div>
                                <div class="col-xs-12 col-sm-6 col-md-6">
                                    <input class="form-control" type="number" name="PcsPerCartoon" ng-model="PcsPerCartoon" required focus-on="focusMe" ng-change="getSftSmt(PcsPerCartoon)" />
                                    <b class="help-block" ng-if="form.PcsPerCartoon.$error.required">
                                        @string.Format(Resources.ResourceCommon.VMsgRequired_Name, Resources.ResourceFGItem.PcsPerCartoon)
                                    </b>


                                </div>
                            </div>

                            <div class="form-group" show-errors id="searchdivid">
                                <div class=" padding-right-zero">
                                    <label class="col-xs-12 col-sm-2 col-md-3 control-label default-color">
                                        <b class="starStyle">*</b> @Resources.ResourceFGItem.WeightPerCartoon
                                    </label>
                                </div>
                                <div class="col-xs-12 col-sm-6 col-md-6">
                                    <input class="form-control" type="number" name="WeightPerCartoon" ng-model="WeightPerCartoon" required focus-on="focusMe" />
                                    <b class="help-block" ng-if="form.WeightPerCartoon.$error.required">
                                        @string.Format(Resources.ResourceCommon.VMsgRequired_Name, Resources.ResourceFGItem.WeightPerCartoon)
                                    </b>

                                </div>
                                <div style="margin-top: 3px;">KG</div>
                            </div>



                            <div class="form-group" show-errors id="searchdivid">
                                <div class=" padding-right-zero">
                                    <label class="col-xs-12 col-sm-3 col-md-3 control-label default-color">
                                        <b class="starStyle">*</b> @Resources.ResourceFGItem.SftPerPiece
                                    </label>
                                </div>
                                <div class="col-xs-12 col-sm-6 col-md-6">
                                    <input class="form-control" type="number" name="SftPerPiece" ng-model="SftPerPiece" required focus-on="focusMe" />
                                    <b class="help-block" ng-if="form.SftPerPiece.$error.required">
                                        @string.Format(Resources.ResourceCommon.VMsgRequired_Name, Resources.ResourceFGItem.SftPerPiece)
                                    </b>
                                </div>

                            </div>

                            <div class="form-group" show-errors id="searchdivid">
                                <div class=" padding-right-zero">
                                    <label class="col-xs-12 col-sm-3 col-md-3 control-label default-color">
                                        <b class="starStyle">*</b> @Resources.ResourceFGItem.SmtPerPiece
                                    </label>
                                </div>
                                <div class="col-xs-12 col-sm-6 col-md-6">
                                    <input class="form-control" type="number" name="SmtPerPiece" ng-model="SmtPerPiece" required focus-on="focusMe" />
                                    <b class="help-block" ng-if="form.SmtPerPiece.$error.required">
                                        @string.Format(Resources.ResourceCommon.VMsgRequired_Name, Resources.ResourceFGItem.SmtPerPiece)
                                    </b>


                                </div>
                            </div>

                            <div class="form-group" show-errors>
                                <div class=" padding-right-zero">
                                    <label class="col-xs-12 col-sm-3 col-md-3 control-label default-color">
                                        <b class="starStyle"></b> @Resources.ResourceFGItem.ImagePath
                                    </label>
                                </div>
                                <div class="col-xs-12 col-sm-6 col-md-6">

                                    <input type="file" file-model="myFile" class="" ng-model="ImagePath" name="file" data-autoclose="true">

                                    <div ng-hide="IsHidden"> <a class=" link-text-style" href="/Files/FGItem/{{Code}}_{{ImagePath}}" download target="_blank">Download File</a></div>
                                </div>
                            </div>


                            <div class="form-group" show-errors>
                                <div class=" padding-right-zero">
                                    <label class="col-xs-12 col-sm-3 col-md-3 control-label default-color">
                                        <b class="starStyle"></b> @Resources.ResourceCommon.LblIsActive
                                    </label>
                                </div>
                                <div class="col-xs-3 col-sm-1 col-md-1 padding-left-zero">
                                    <div class="col-xs-12 col-sm-10 col-md-8">
                                        <input class="form-control" type="checkbox" ng-model="IsActive" />
                                    </div>

                                </div>
                            </div>



                            <div class="form-group">
                                <div class="col-md-offset-3 col-sm-offset-3 col-xs-12 col-sm-8 col-md-8  padding-right-zero">
                                    <input type="button" ng-click="addFGItem()" class="btn btn-primary" value=@Resources.ResourceCommon.LblSave />
                                    <input type="button" ng-click="reset()" class="btn btn-default" value=@Resources.ResourceCommon.LblReset />

                                    <input ng-if="itemId" type="button" value=@Resources.ResourceCommon.LblDelete class="btn btn-danger " ng-bootbox-confirm='@Resources.ResourceCommon.MsgConfirm_Delete'
                                           ng-bootbox-confirm-action="deleteFGItem()" ng-bootbox-confirm-action-cancel="confirmCallbackCancel(attr1, attr2)" />

                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @* ************ FORM - SECTION (End)*************** *@


    @* ************ POP-UP MODEL (Start)*************** *@
    <div class="row">
        <div class="col-xs-12 col-sm-3 col-md-3">
            <modal title='@Resources.ResourceCommon.MsgHeaderSuccess' visible="showModalforSearch">
                <alert ng-repeat="alert in alerts" type="alert.type" close="closeAlert($index)">{{alert.msg}}</alert>
                <form name="form.update" role="form">
                    <div class="row">
                        <div class="col-xs-12 col-sm-12 col-md-12">
                            <span>{{messageModalObj.message}}</span>
                        </div>
                    </div>
                </form>
            </modal>
        </div>
    </div>
    @* ************ POP-UP MODEL (End)*************** *@

</div>


<script type="text/javascript">
    app.filter('startFrom', function () {
        return function (input, start) {
            if (input) {
                start = +start; //parse to int
                return input.slice(start);
            }
            return [];
        }
    });
    app.factory('focus', function ($rootScope, $timeout) {
        return function (name) {
            $timeout(function () {
                $rootScope.$broadcast('focusOn', name);
            });
        };
    });
    app.factory('fgitemService', ['$http', function ($http) {

        return {
            saveFGItem: function (fgitem, fileName) {
                var parms = { fgitem: fgitem, fileName: fileName }
                return $http({
                    url: '/FGItem/CreateFGItem',
                    method: 'POST',
                    data: JSON.stringify(parms)
                });
            },
            getFGItem: function (id) {
                return $http.get('/FGItem/GetFGItem/' + id);
            },
            getAllType: function () {
                return $http.get('/FGType/GetFGTypeList');
            },
            getAllSizeByType: function (Id) {
                return $http.get('/FGSize/GetFGSizeListByTypeId?Id=' + Id);
            },
            getAllPackUnit: function () {
                return $http.get('/FGUOM/GetFGUOMList');
            },
            getAllEmployee: function () {
                return $http.get('/Employee/GetEmployeeList');
            },
            getAllFGItem: function () {
                return $http.get('/FGItem/GetFGItemList');
            },

            uploadFile: function (name, code, file) {
                var fdata = new FormData();
                var url = '/FGItem/UpoladFile';
                fdata.append('name', name);
                fdata.append('code', code);
                fdata.append('file', file);

                return $http.post(url, fdata, {
                    transformRequest: angular.identity,
                    headers: { 'Content-Type': undefined }
                });

            },

            deleteFGItem: function (fgitem) {
                return $http({
                    url: '/FGItem/DeleteFGItem',
                    method: 'POST',
                    data: fgitem
                });
            }
        };
    }]); app.controller('fgitemCtrl', function ($scope, $timeout, $http, focus, $location, $anchorScroll, fgitemService, $log, $ngBootbox) {


        if ('@ViewBag.permission' == "NO") {
            $scope.NoPermission = true;
        }
        $scope.messageModalObj = {};
        $scope.messageModalObj.message = '';
        $scope.IsActive = true;
        $scope.IsHidden = true;
        $scope.SizeId = null;
        loadAllFGItem();
        $scope.showModalforSearch = false;
        // Add a new fgitem
        $scope.addFGItem = function () {
            $scope.$broadcast('show-errors-check-validity');
            if ($scope.form.$valid) {
                var fgitem = {};
                fgitem["Id"] = $scope.Id;
                fgitem["TypeId"] = $scope.TypeId;
                fgitem["SizeId"] = $scope.SizeId;
                fgitem["Code"] = $scope.Code;
                fgitem["Name"] = $scope.Name;
                fgitem["Color"] = $scope.Color;
                fgitem["PackUnitId"] = $scope.PackUnitId;
                fgitem["SalesUnitId"] = $scope.SalesUnitId;
                fgitem["PackageToSalesRatio"] = $scope.PackageToSalesRatio;
                fgitem["PcsPerCartoon"] = $scope.PcsPerCartoon;
                fgitem["WeightPerCartoon"] = $scope.WeightPerCartoon;
                fgitem["SftPerPiece"] = $scope.SftPerPiece;
                fgitem["SmtPerPiece"] = $scope.SmtPerPiece;
                fgitem["ImagePath"] = $scope.ImagePath;
                fgitem["IsActive"] = $scope.IsActive;

                var fileName = "";
                if ($scope.myFile != null) {
                    fileName = $scope.myFile.name;
                }

                fgitemService.saveFGItem(fgitem, fileName)
                 .then(function onSuccess(response) {

                     if ($scope.myFile != null) {
                         $scope.UploadFile();
                     }
                     location.reload();
                     loadAllFGItem();

                     $scope.messageModalObj.message = response.data.message;
                     $scope.showModalforSearch = true;
                     $timeout(function () { $scope.showModalforSearch = false; }, 3000);
                     $scope.reset();

                 })
                .catch(function onError(response) {
                    $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInSaving');
                });
            }
        };

       


        $scope.getSftSmt = function (PcsPerCartoon) {
            if ($scope.PackUnitId == 1 && $scope.SalesUnitId == 3) {
            $scope.SftPerPiece = ($scope.PackageToSalesRatio / $scope.PcsPerCartoon);
          //  $scope.SftPerPiece = $scope.SftPerPiece.toFixed(2);
          //  $scope.SftPerPiece = parseFloat($scope.SftPerPiece);
            $scope.SmtPerPiece = $scope.SftPerPiece * 0.092903;
           // $scope.SmtPerPiece = $scope.SmtPerPiece.toFixed(2);
          //$scope.SmtPerPiece = parseFloat($scope.SmtPerPiece);

            }


    }







        // Populate fgitem

        $scope.selectedRow = null;
    $scope.populateFGItem = function (rowvalue) {
        $scope.selectedRow = rowvalue;
        $scope.Id = rowvalue.Id;
        $scope.TypeId = rowvalue.TypeId;
        $scope.selectType();
        $scope.SizeId = rowvalue.SizeId;
        $scope.Code = rowvalue.Code;
        $scope.Name = rowvalue.Name;
        $scope.Color = rowvalue.Color;
        $scope.PackUnitId = rowvalue.PackUnitId;
        $scope.SalesUnitId = rowvalue.SalesUnitId;
        $scope.PackageToSalesRatio = rowvalue.PackageToSalesRatio;
        $scope.PcsPerCartoon = rowvalue.PcsPerCartoon;
        $scope.WeightPerCartoon = rowvalue.WeightPerCartoon;
        $scope.SftPerPiece = rowvalue.SftPerPiece;
        $scope.SmtPerPiece = rowvalue.SmtPerPiece;
        $scope.ImagePath = rowvalue.ImagePath;
        $scope.IsActive = rowvalue.IsActive;
        $scope.IsHidden = false;



        $location.hash('searchDivId');
        $anchorScroll();
        focus('focusMe');
        $scope.desableIdField = true;
    }

    $scope.reset = function () {
        $scope.$broadcast('show-errors-reset');
        $scope.selectedRow = null;
        $scope.Id = '';
        $scope.TypeId = null;
        $scope.SizeId = null;
        $scope.sizeFromDbByType = [];
        $scope.Code = '';
        $scope.Name = '';
        $scope.Color = '';
        $scope.PackUnitId = null;
        $scope.SalesUnitId = null;
        $scope.PackageToSalesRatio = '';
        $scope.PcsPerCartoon = '';
        $scope.WeightPerCartoon = '';
        $scope.SftPerPiece = '';
        $scope.SmtPerPiece = '';
        $scope.ImagePath = '';
        $scope.IsActive = '';
        $scope.IsHidden = true;
        $scope.itemId = '';
    }

    $scope.deleteFGItem = function () {
        var fgitem = {};
        fgitem["Id"] = $scope.Id;
        fgitemService.deleteFGItem(fgitem)
       .then(function onSuccess(response) {
           $scope.messageModalObj.message = response.data.message;
           $scope.showModalforSearch = true;
           $timeout(function () { $scope.showModalforSearch = false; }, 3000);
           $scope.reset();
           loadAllFGItem();
       })
   .catch(function onError(response) {
       $ngBootbox.alert('@Resources.ResourceCommon.MsgNot_deleted');
   });
    }



    $scope.UploadFile = function () {

        fgitemService.uploadFile($scope.myFile.name, $scope.Code, $scope.myFile)
             .then(function onSuccess(response) {
                 $scope.allFGItemFileFromDb = response.data;
             })
             .catch(function onError(response) {
                 $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInLoading');
             });
        //$scope.UploadFileIndividual(, $scope.myFile.name);
    }




    //$scope.deleteFGItem = function () {
    //    $scope.$broadcast('show-errors-check-validity');
    //    if ($scope.form.$valid) {
    //        var fgitem = {};
    //        fgitem["Id"] = $scope.Id;

    //        fgitemService.deleteFGItem(fgitem)
    //            .then(function onSuccess(response) {
    //                $scope.messageModalObj.message = response.data.message;
    //                $scope.showModalforSearch = true;
    //                $timeout(function () { $scope.showModalforSearch = false; }, 3000);
    //                $scope.reset();
    //                loadAllFGItem();
    //            });

    //    }
    //};

    $scope.loadItemById = function (itemId) {

        fgitemService.getFGItem(itemId)
            .then(function onSuccess(response) {

                $scope.populateFGItem(response.data);

            })
            .catch(function onError(response) {
                $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInLoading');
            });
    }



    @*$scope.loadUOMById = function (uomId) {

            fgitemService.getFGItem(uomId)
                .then(function onSuccess(response) {

                    $scope.UnitName = response.data.UnitName;

                })
                .catch(function onError(response) {
                    $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInLoading');
                });
        }*@



    loadAllType();
    function loadAllType() {
        $scope.allTypeFromDb = [];
        fgitemService.getAllType()
            .then(function onSuccess(response) {
                $scope.allTypeFromDb = response.data;
            })
            .catch(function onError(response) {
                $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInLoading');
            });
    }


    $scope.selectType = function () {
        if ($scope.TypeId == null || $scope.TypeId == undefined || $scope.TypeId == "") {
            return;
        }
        fgitemService.getAllSizeByType($scope.TypeId)
            .then(function onSuccess(response) {
                $scope.sizeFromDbByType = response.data;
            })
            .catch(function onError(response) {
                $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInLoading');
            });
    }


    loadAllPackUnit();
    function loadAllPackUnit() {
        $scope.allPackUnitFromDb = [];
        fgitemService.getAllPackUnit()
            .then(function onSuccess(response) {
                $scope.allPackUnitFromDb = response.data;
            })
            .catch(function onError(response) {
                $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInLoading');
            });
    }


    loadAllEmployee();
    function loadAllEmployee() {
        $scope.allEmployeeFromDb = [];
        fgitemService.getAllEmployee()
            .then(function onSuccess(response) {
                $scope.allEmployeeFromDb = response.data;
            })
            .catch(function onError(response) {
                $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInLoading');
            });
    }





    // Load FGItem

    function loadAllFGItem() {
        $scope.allFGItemFromDb = [];
        fgitemService.getAllFGItem()
                .then(function onSuccess(response) {
                    $scope.allFGItemFromDb = response.data;
                })
                .catch(function onError(response) {
                    $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInLoading');
                });
    }



    });</script>
