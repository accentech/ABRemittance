@using System.IdentityModel
@using OfficeOpenXml.FormulaParsing.Excel.Functions.DateTime
@{
    ViewBag.Title = @Resources.ResourceLogin.LblTitle;
    Layout = "~/Views/Shared/_LoginLayout.cshtml";
}

<style type="text/css">
    .lang-btn {
        background-color: #fff;
    }

    .lang-btn.checked {
        background-color: #2D4373;
        color: #ffffff;
    }
    .profile-img {
        width: 100px;
        height: 100px;
        margin: 0 auto 10px;
        display: block;
        -moz-border-radius: 20%;
        -webkit-border-radius: 20%;
        border-radius: 20%;
    }

    .btn-group.fullwidth {
        display: flex;
    }

    .fullwidth .btn {
        flex: 1;
    }
    

</style> 

@*<div ng-controller="loginCtrl">
    <div class="row">
        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3"></div>
        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6 form-horizontal centered">
            <div class="login-box">
                <h1 class="login-header">@Resources.ResourceLogin.LblTitle</h1>
                <form name="form" class="login" novalidate>
                    <div class="form-group" show-errors>
                        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
                            <label class="control-label default-color">
                                @Resources.ResourceLogin.LblUserId
                            </label>
                        </div>
                        <div class="col-xs-12 col-sm-9 col-md-9 col-lg-9">
                            <input class="form-control" name="LoginName" type="text" ng-model="LoginName" autofocus required />
                            <b class="help-block" ng-if="form.LoginName.$error.required">
                                @string.Format(Resources.ResourceCommon.VMsgRequired_Name, Resources.ResourceLogin.LblUserId)
                            </b>
                        </div>
                    </div>
                    <div class="form-group" show-errors>
                        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
                            <label class="control-label default-color">
                                @Resources.ResourceLogin.LblPassword
                            </label>
                        </div>
                        <div class="col-xs-12 col-sm-9 col-md-9 col-lg-9">
                            <input name="Password" class="form-control" type="password" ng-model="Password" required />
                            <b class="help-block" ng-if="form.Password.$error.required">
                                @string.Format(Resources.ResourceCommon.VMsgRequired_Name, Resources.ResourceLogin.LblPassword)
                            </b>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-3 col-xs-12 col-sm-2 col-md-2 col-lg-2">

                            <button ng-click="userLogin()" class="btn btn-info">
                                @Resources.ResourceLogin.LblLogIn <i class="glyphicon glyphicon-log-in"></i>
                            </button>
                        </div>
                        $1$<div class="col-md-offset-1 col-xs-12 col-sm-3 col-md-3 col-lg-3 padding-left-zero default-font-size-10" style="padding-top:6px;">
                                <a href="/Account/RecoverPassword">
                                    Forgot password?
                                </a>
                            </div>#1#
                    </div>
                </form>
            </div>
        </div>

        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
            <modal title='@Resources.ResourceCommon.MsgHeaderSuccess' visible="showModalforSearch">
                <alert ng-repeat="alert in alerts" type="alert.type" close="closeAlert($index)">{{alert.msg}}</alert>
                <form name="form.update" role="form">
                    <div class="row">
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <span>{{messageModalObj.message}}</span>
                        </div>
                    </div>
                </form>
            </modal>
        </div>
    </div>
</div>*@


<div ng-controller="loginCtrl">

    <div class="col-md-4 col-md-offset-4" >
        @*<h1 class="text-center text-bold text-light mt-4x">@Resources.ResourceLogin.LblTitle</h1>*@
        <div class="well row bk-light" style="margin-top: 13%;">
            <div class="col-md-12 ">
                <img class="profile-img" src="~/Content/Images/logo.png" alt="">
                <h1 class="login-Screen-header">@Resources.ResourceLogin.LblTitle</h1>


                <form name="form" class="mt" novalidate="">
                    <select id="drpdownLanguage" class="dropdownclass" name="drpdownLanguage" data-ng-model="language" ng-hide="true">

                        <option value="en">English</option>

                        <option value="zh">Chinese</option>

                    </select>


                    <div class="form-group" show-errors>
                        <label class="text-uppercase text-sm">
                            @Resources.ResourceLogin.LblUserId
                        </label>
                        <input class="form-control mb" name="LoginName" type="text" placeholder="Username" ng-model="LoginName" autofocus required/>
                        <b class="help-block" ng-if="form.LoginName.$error.required">
                            @string.Format(Resources.ResourceCommon.VMsgRequired_Name, Resources.ResourceLogin.LblUserId)
                        </b>
                    </div>


                    <div class="form-group" show-errors>

                        <label class="text-uppercase text-sm">
                            @Resources.ResourceLogin.LblPassword
                        </label>
                        <input name="Password" class="form-control mb" type="password" placeholder="Password" ng-model="Password" required/>
                        <b class="help-block" ng-if="form.Password.$error.required">
                            @string.Format(Resources.ResourceCommon.VMsgRequired_Name, Resources.ResourceLogin.LblPassword)
                        </b>
                    </div>

                    <div class="form-group">
                        <label class="text-uppercase text-sm">
                            @Resources.ResourceLogin.LblLanguage
                        </label>
                        <div class="btn-group fullwidth" role="group" style="padding-bottom: 10px;">

                            <button type="button" class="btn btn-default lang-btn" style="padding-top: 10px;"
                                    ng-click="toggleResponseValue(en)"
                                    ng-class="{'checked':checkedEn}"
                                    ng-model="en">
                                <img src="~/Content/Images/English.svg" width="auto" height="10" style="display: inline-block;" /> &nbsp;&nbsp;
                                English
                            </button>
                            <button type="button" class="btn btn-default lang-btn" style="padding-top: 10px;"
                                    ng-click="toggleResponseValue(zh)"
                                    ng-class="{'checked':checkedZh}"
                                    ng-model="zh">
                                <img src="~/Content/Images/chineese.svg" width="auto" height="10" style="display: inline-block;" /> &nbsp;&nbsp;
                                Chinese
                            </button>
                        </div>



                    </div>


                    <button class="btn btn-primary btn-block" ng-click="userLogin()" style="height: 40px; background: #5b361e;">@Resources.ResourceLogin.LblLogIn</button>

                </form>
            </div>
        </div>

        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
            <modal title='@Resources.ResourceCommon.MsgHeaderSuccess' visible="showModalforSearch">
                <alert ng-repeat="alert in alerts" type="alert.type" close="closeAlert($index)">{{alert.msg}}</alert>
                <form name="form.update" role="form">
                    <div class="row">
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <span>{{messageModalObj.message}}</span>
                        </div>
                    </div>
                </form>
            </modal>
        </div>
    </div>
</div>






<script type="text/javascript">


    $('.btn-toggle').click(function () {
        $(this).find('.btn').toggleClass('active');

        if ($(this).find('.btn-primary').size() > 0) {
            $(this).find('.btn').toggleClass('btn-primary');
        }
        if ($(this).find('.btn-danger').size() > 0) {
            $(this).find('.btn').toggleClass('btn-danger');
        }
        if ($(this).find('.btn-success').size() > 0) {
            $(this).find('.btn').toggleClass('btn-success');
        }
        if ($(this).find('.btn-info').size() > 0) {
            $(this).find('.btn').toggleClass('btn-info');
        }

        $(this).find('.btn').toggleClass('btn-default');

    });

    var myEl = angular.element(document.querySelector('#body'));
    myEl.addClass('login-background');

    $(".input").focusin(function () {
        $(this).find("span").animate({ "opacity": "0" }, 200);
    });

    $(".input").focusout(function () {
        $(this).find("span").animate({ "opacity": "1" }, 300);
    });

    $(".login").submit(function () {
        $(this).find(".submit i").removeAttr('class').addClass("fa fa-check").css({ "color": "#fff" });
        $(".submit").css({ "background": "#2ecc71", "border-color": "#2ecc71" });
        $(".feedback").show().animate({ "opacity": "1", "bottom": "-80px" }, 400);
        $("input").css({ "border-color": "#2ecc71" });
        return false;
    });

    // var ip = '<%= Request.UserHostAddress %>';

    app.factory('loginService', ['$http', function ($http) {
        return {
            checkLogin: function (user, timeZoneOffset, language) {
                var parameters = { user: user, timeZoneOffset: timeZoneOffset, language: language };
                return $http({
                    url: '/Account/CheckLogin',
                    method: 'POST',
                    dataType: "json",
                    data: JSON.stringify(parameters),
                })
            },
            /*checkLogin: function (user, timeZoneOffset) {
                var parameters = { user: user, timeZoneOffset: timeZoneOffset };
                return $http({
                    url: '/Account/CheckLogin',
                    method: 'POST',
                    dataType: "json",
                    data: JSON.stringify(parameters),
                })
            },*/
            SetTimeZoneOffset: function (timeZoneOffset) {
                var parameters = { timeZoneOffset: timeZoneOffset };
                return $http({
                    url: '/Account/SetTimeZoneOffset',
                    method: 'POST',
                    dataType: "json",
                    data: JSON.stringify(parameters),
                })
            }
        };
    }]);app.controller('loginCtrl', function ($scope, $http, $location, loginService, $timeout, $log, $ngBootbox, blockUI) {

        $scope.language = "en";
        $scope.en = "en";
        $scope.zh = "zh";
        $scope.checkedEn = true;
        $scope.checkedZh = false;
        
        $scope.showModalforLogIn = false;
        $scope.Roles = {};

        $scope.messageModalObj = {};
        $scope.showModalforSearch = false;
        if ('@ViewBag.RedirectMessage' != '') {
            $scope.showModalforSearch = true;
            $scope.messageModalObj.message = '@ViewBag.RedirectMessage';
            $timeout(function () { $scope.showModalforSearch = false; }, 3000);
        }

        $scope.toggleResponseValue = function (lng) {
            $scope.language = lng;

            if (lng == "en") {
                $scope.checkedEn = true;
                $scope.checkedZh = false;
            }

            if (lng == "zh") {
                $scope.checkedEn = false;
                $scope.checkedZh = true;
            }
        }

        $scope.userLogin = function () {
            $scope.$broadcast('show-errors-check-validity');
            if ($scope.form.$valid) {
                var login = {};
                login["LoginName"] = $scope.LoginName;
                login["Password"] = $scope.Password;

                var dateObj = new Date();
                var timeZoneOffset = -(dateObj.getTimezoneOffset());
                var language = $scope.language;
                loginService.checkLogin(login, timeZoneOffset, language)
                    .then(function onSuccess(response) {
                        if (response.data.isSuccess == true) {
                            if (response.data.RoleId != null) {
                                var myBlockUI = blockUI.instances.get('myBlockUI');
                                myBlockUI.start();
                                $timeout(function () {
                                    myBlockUI.stop();
                                }, 999999);
                                var roleId = response.data.RoleId;

                                if (roleId == '@System.Configuration.ConfigurationManager.AppSettings["OperatorRoleId"]') {
                                    if (response.data.url) {
                                        window.location = response.data.url;
                                    } else {
                                        myBlockUI.stop();
                                        $ngBootbox.alert('You Have no access');
                                    }
                                } else {
                                    // window.location = "/Dashboard/ShowAdminPage/" + response.data.Id;
                                    window.location = "/Dashboard/HomePage";
                                }
                                /* else {
                                     window.location = "/Country/Index/" + response.data.Id;
                                 }*/

                                //if (roleId == 1)
                                //    window.location = "/Dashboard/ShowAdminPage/" + response.data.Id;
                                //else if (roleId == 2)
                                //    window.location = "/Dashboard/ShowDoctorPage/" + response.data.Id;
                                //else if (roleId == 3)
                                //    window.location = "/Dashboard/ShowPatientPage/" + response.data.Id;
                                //else if (roleId == 4)
                                //    window.location = "/Dashboard/ShowDoctorAssistantPage/" + response.data.Id;
                                //else if (roleId == 5)
                                //    window.location = "/Dashboard/ShowChamberAssistantPage/" + response.data.Id;
                                //else if (roleId == 7)
                                //    window.location = "/Dashboard/ShowPharmacistPage/" + response.data.Id;
                                //else
                                //    $ngBootbox.alert("No view available yet!");
                            } else {
                                $ngBootbox.alert('Wrong user id or password!');
                            }
                        } else {
                            $scope.showModalforSearch = true;
                            $scope.messageModalObj.message = 'Wrong user id or password!';
                            $timeout(function () { $scope.showModalforSearch = false; }, 3000);
                        }
                            
                    });
            }
        };

        loadTimeZone();
        function loadTimeZone() {
            var dateObj = new Date();
            var timeZoneOffset = -(dateObj.getTimezoneOffset());
            loginService.SetTimeZoneOffset(timeZoneOffset)
                .then(function onSuccess(response) {
                    //$scope.healthTipList = response.data;
                });
        }
    });</script>