@{
    ViewBag.Title = @Resources.ResourceNotificationSetting.LblNotificationSetting;
    Layout = "~/Views/Shared/_Angular1_6_7NewMenuView.cshtml";
}

@*<div class="panel panel-default">
      <div class="panel-heading text-lg text-bold text-uppercase">Form fields</div>
      <div class="panel-body border-green  pt pb">

      </div>
    </div>*@

<div class="col-xs-12 col-sm-12" ng-controller="notificationSettingCtrl">
    <div class="panel panel-default">
        <div class="panel-heading text-lg text-bold text-uppercase">
            @Resources.ResourceNotificationSetting.LblNotificationSetting
        </div>
        <div class="panel-body  border-green pt pb">
            <div class="row">
                <div class="col-md-12">
                    <select class="form-control" data-ng-model="WorkflowactionId" autofocus ng-change="loadAllUsresForUrlDropDown()"
                            data-ng-options="doc.Id as doc.Name for doc in allWorkflowactionFromDb | orderBy:'Name'">
                        <option value="">@Resources.ResourceCommon.LblSelect Workflow Action</option>
                    </select>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <select class="form-control" data-ng-model="SubModuleItemId" ng-disabled="WorkflowactionId==null" ng-change="loadAllUsresForUrlDropDown()"
                            data-ng-options="doc.Id as doc.NameFromResource for doc in allSubModuleItemFromDb | orderBy:'NameFromResource'">
                        <option value="">@Resources.ResourceCommon.LblSelect @Resources.ResourceModule.LblSubModuleItem</option>
                    </select>
                </div>
            </div>
            <div style="border:2px solid gray; padding:15px; margin:15px; border-radius:5px;">
                <form name="form" novalidate>
                    <div class="row">
                        <div class="col-sm-8 padding-left-right-zero">
                            <div class="form-group">
                                <label class="col-sm-4 control-label">
                                    @Resources.ResourceWorkflowactionSetting.LblFilterInAvailableEmp
                                </label>
                                <div class="col-sm-4 padding-left-right-zero">
                                    <select data-ng-model="DepartmentId" class="form-control" ng-disabled="SubModuleItemId==null"
                                            data-ng-options="c.Id as c.Name for c in allDepartmentFromDb | orderBy: 'Name'" ng-change="getDesignation()" name="DepartmentId">
                                        <option value="">@Resources.ResourceEmploymentHistory.LblSelDep</option>
                                    </select>
                                </div>
                                <div class="col-sm-4 padding-left-right-zero">
                                    <select data-ng-model="DesignationId" class="form-control" ng-disabled="DepartmentId==null ||SubModuleItemId==null" ng-change="loadAllUsresForUrlDropDown()"
                                            data-ng-options="c.Id as c.Name for c in allDesignationByDepartment | orderBy: 'Name'">
                                        <option value="">
                                            @Resources.ResourceEmploymentHistory.LblSelDesg
                                        </option>
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-offset-1 col-md-10 form-horizontal">
                            <div class="col-md-5">
                                <label for="aMedicines">@Resources.ResourceWorkflowactionSetting.LblAvailableEmployee</label>
                                <select size="20" class="form-control" multiple ng-model="available" ng-disabled="NotPermission" ng-options="Medicine as Medicine.FullName for Medicine in availableEmployees | orderBy: 'FullName'" ng-dblclick="moveItem(available[0], availableEmployees,selectedEmployees)"></select>
                            </div>
                            <div class="col-md-2 center form-group">
                                <br /><br /><br /><br /><br />
                                <button id="moverightall" class="col-md-12 btn btn-info form-control" ng-click="moveAll(availableEmployees,selectedEmployees)" title="Add all to right" style="margin-top:10px;"> >> </button>
                                <button id="moveright" class="col-md-12 col-md-12 btn btn-info form-control" ng-click="moveItem(available[0], availableEmployees,selectedEmployees)" title="Add to right" style="margin-top:10px;"> > </button>
                                <button id="moveleft" class="col-md-12 btn btn-info form-control" ng-click="moveItem(selected[0], selectedEmployees,availableEmployees)" title="Add to left" style="margin-top:10px;"> <  </button>
                                <button id="moveleftall" class="col-md-12 btn btn-info form-control" ng-click="moveAll(selectedEmployees,availableEmployees)" title="Add all to left" style="margin-top:10px;"> << </button>
                            </div>
                            <div class="col-md-5 padding-right-zero">
                                <label for="sMedicines">@Resources.ResourceWorkflowactionSetting.LblSelectedEmployee</label>
                                <select size="20" class="form-control" multiple ng-model="selected" ng-options="Medicine as Medicine.FullName for Medicine in selectedEmployees | orderBy: 'FullName'" ng-dblclick="moveItem(selected[0], selectedEmployees,availableEmployees)" focus-on="focusMe"></select>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        <div class="col-md-offset-7 col-md-5">
                            <input type="submit" ng-disabled="SubModuleItemId==null" ng-click="addNotificationSettingList()" class="btn btn-primary col-md-7" value="Submit" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <modal title="Success Message" visible="showModalforSubmitMessage">
                        <alert ng-repeat="alert in alerts" type="alert.type" close="closeAlert($index)">{{alert.msg}}</alert>
                        <form name="form.update" role="form">
                            <div class="row">
                                <div class="col-md-12">
                                    <span>{{messageModalObj.message}}</span>
                                </div>
                            </div>

                        </form>
                    </modal>
                </div>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">

    app.factory('focus', function ($rootScope, $timeout) {
        return function (name) {
            $timeout(function () {
                $rootScope.$broadcast('focusOn', name);
            });
        };
    });
    app.factory('notificationSettingService', ['$http', function ($http) {

        return {
            saveNotificationSettingList: function (notificationSettingList, subModuleItemId, workflowactionId) {
                parameters = { notificationSettingList: notificationSettingList, subModuleItemId: subModuleItemId, workflowactionId: workflowactionId }
                return $http({
                    url: '/NotificationSetting/CreateNotificationSettingList',
                    method: 'POST',
                    type:"json",
                    data: JSON.stringify(parameters)
                })
            },
            /*getAllAvaiableUserForASubModuleItem: function (id) {
                return $http.get('/Employee/GetAllAvaiableUserForASubModuleItem/' + id);
            },*/
            getAllAvaiableUserForASubModuleItemByDeptDesignation: function (workflowactionId, subModuleItemId, departmentId, designationId) {
                parameters = { workflowactionId: workflowactionId, subModuleItemId: subModuleItemId, departmentId: departmentId, designationId: designationId }
                return $http({
                    url: '/Employee/GetAllAvaiableUserForASubModuleItemFilterByDeptDesignationForNotification', //(int subModuleItemId, int? departmentId, int? designationId)// int id) //subModuleItem
                    method: 'POST',
                    type: "json",
                    data: JSON.stringify(parameters)
                })
            },
            getAllSubModuleItem: function () {
                return $http.get('/SubModuleItem/GetBaseSubModuleItemList');
            },
            getAllWorkflowaction: function () {
                return $http.get('/Workflowaction/GetWorkflowactionList');
            },
            getAllDepartment: function () {
                return $http.get('/Department/GetDepartmentList');
            },
            getAllDesignationByDept: function (id) {// But Here All Designation are geted
                return $http.get('/Designation/GetDesignationListByDepartmentId/' + id);
            },
        };
    }]);app.controller('notificationSettingCtrl', function ($scope, $http, focus, $location, $anchorScroll, $timeout, notificationSettingService, $log, $ngBootbox) {
        $scope.messageModalObj = {};
        //$scope.messageModalObj.message = '';
        $scope.showModalforSubmitMessage = false;
        // loadAllMedicine();

        // Add a new notificationSetting
        $scope.addNotificationSettingList = function () {
            $scope.$broadcast('show-errors-check-validity');
            if ($scope.form.$valid) {

                $scope.NotificationSettingList = [];
                //alert("Doctor Id: "+doctorIdToBeSaved)

                if ($scope.SubModuleItemId == null || $scope.SubModuleItemId == undefined || $scope.SubModuleItemId == "") {
                    $scope.messageModalObj.message = '@Resources.ResourceWorkflowactionSetting.LblPlsSelectUrl';
                    $scope.showModalforSubmitMessage = true;
                    $timeout(function () { $scope.showModalforSubmitMessage = false; }, 3000);
                    return;
                }

                for (var i = 0; i < $scope.selectedEmployees.length; i++) {
                    $scope.NotificationSettingList.push({ Id: '', SubModuleItemId: $scope.SubModuleItemId, NotifiedEmployeeId: $scope.selectedEmployees[i].Id, WorkflowactionId: $scope.WorkflowactionId });
                }

                notificationSettingService.saveNotificationSettingList($scope.NotificationSettingList, $scope.SubModuleItemId, $scope.WorkflowactionId)
                .then(function onSuccess(response) {
                    loadAllUsresForUrlDropDown();
                    $scope.messageModalObj.message = response.data.message;
                    $scope.showModalforSubmitMessage = true;
                    $timeout(function () { $scope.showModalforSubmitMessage = false; }, 3000);
                })
                .catch(function onError(response) {
                    //$ngBootbox.alert('Error in saving data');
                });
            }
        };

        $scope.reset = function () {
            //alert(2222)
            //$scope.$broadcast('show-errors-reset');
        }

        function loadAllUsresForUrlDropDown() {
            //$scope.DepartmentId = null;
            //$scope.DesignationId = null;

            if (($scope.WorkflowactionId == null || $scope.WorkflowactionId == undefined) && ($scope.SubModuleItemId == null || $scope.SubModuleItemId == undefined))
                return;

            $scope.availableEmployees = [];
            $scope.selectedEmployees = [];

            if ($scope.SubModuleItemId != null)
                notificationSettingService.getAllAvaiableUserForASubModuleItemByDeptDesignation($scope.WorkflowactionId, $scope.SubModuleItemId, $scope.DepartmentId, $scope.DesignationId)
                .then(function onSuccess(response) {
                    $scope.availableEmployees = response.data.availableEmployees;
                    $scope.selectedEmployees = response.data.selectedEmployees;
                })
                .catch(function onError(response) {
                    //$ngBootbox.alert('Error in loading available medicine list');
                });
        }

        $scope.loadAllUsresForUrlDropDown = function () {
            //$scope.DepartmentId = null;
            //$scope.DesignationId = null;

            if (($scope.WorkflowactionId == null || $scope.WorkflowactionId == undefined) && ($scope.SubModuleItemId == null || $scope.SubModuleItemId == undefined))
                return;

            $scope.availableEmployees = [];
            $scope.selectedEmployees = [];

            if ($scope.SubModuleItemId != null)
                notificationSettingService.getAllAvaiableUserForASubModuleItemByDeptDesignation($scope.WorkflowactionId, $scope.SubModuleItemId, $scope.DepartmentId, $scope.DesignationId)
                .then(function onSuccess(response) {
                    $scope.availableEmployees = response.data.availableEmployees;
                    $scope.selectedEmployees = response.data.selectedEmployees;
                })
                .catch(function onError(response) {
                    //$ngBootbox.alert('Error in loading available medicine list');
                });
        }

        loadAllSubModuleItem();
        function loadAllSubModuleItem() {
            $scope.allSubModuleItemFromDb = [];
            notificationSettingService.getAllSubModuleItem()
                .then(function onSuccess(response) {
                    $scope.allSubModuleItemFromDb = response.data;
                })
                .catch(function onError(response) {
                    //$ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInLoading');
                });
        }

        $scope.moveItem = function (item, from, to) {
            //console.log('Move item   Item: ' + item + ' From:: ' + from + ' To:: ' + to);
            //Here from is returned as blank and to as undefined
            var idx = from.indexOf(item);
            if (idx != -1) {
                from.splice(idx, 1);
                to.push(item);
            }
        };
        $scope.moveAll = function (from, to) {
            //console.log('Move all  From:: ' + from + ' To:: ' + to);
            //Here from is returned as blank and to as undefined
            angular.forEach(from, function (item) {
                to.push(item);
            });
            from.length = 0;
        };

        loadAllWorkflowaction();
        function loadAllWorkflowaction() {
            notificationSettingService.getAllWorkflowaction()
                .then(function onSuccess(response) {
                    $scope.allWorkflowactionFromDb = response.data;
                })
                .catch(function onError(response) {
                    $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInLoading');
                });
        }

        loadAllDepartment();
        function loadAllDepartment() {
            $scope.DesignationId = undefined;
            //$scope.allDesignationByDepartment = [];
            //$scope.allDepartmentFromDb = [];

            notificationSettingService.getAllDepartment()
                .then(function onSuccess(response) {
                    $scope.allDepartmentFromDb = response.data;
                })
                .catch(function onError(response) {
                    $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInLoading');
                });
        }

        $scope.getDesignation = function () {
            $scope.DesignationId = undefined;
            $scope.allDesignationByDepartment = [];
            loadAllUsresForUrlDropDown();

            if ($scope.DepartmentId != undefined && $scope.DepartmentId != '' && $scope.DepartmentId != null) {
                notificationSettingService.getAllDesignationByDept($scope.DepartmentId)
                    .then(function onSuccess(response) {
                        $scope.allDesignationByDepartment = response.data;
                    })
                    .catch(function onError(response) {
                        $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInLoading');
                    });
            }
        }
    });</script>
